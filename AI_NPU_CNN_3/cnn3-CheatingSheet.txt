AI NPU (3) â€“ EDGE SoC CNN COVID-19 X-ray Image Detector

Cheating sheet: commands 

Environment Setup (Linux/Ubuntu 18.04/22.04)-Anaconda

Method 1 : register and download
https://www.anaconda.com/download
Method 2 : download from archive website, for example  
command:  wget https://repo.anaconda.com/archive/Anaconda3-2024.06-1-Linux-x86_64.sh
Install by executing the executable file
command:   sudo apt-get update
command:   sudo apt-get install curl
command:   sh Anaconda3-2024.06-1-Linux-x86_64.sh

At the last step , it will show if you want to update your shell profile to automatically initialize conda ? 
Yes, each time you invoke a terminal, a (base) conda environment will be set-up
No, you will need to initialize the (base) conda by yourself, eg  
command:   eval "command:  (<your path>/anaconda3/bin/conda shell.bash hook)"

NVIDIA Driver/CUDA and CUDNN Installation

Update ubuntu packages

command:   sudo apt-get update 
command:   sudo apt-get install libc-dev -y 
command:   sudo apt-get install linux-headers-command:  (uname -r) -y 
command:   sudo apt-get install ubuntu-drivers-common


Check NVIDIA driver automatically

command:   NVIDIA-detector 
Install recommend version ,eg 
command:   sudo apt-get install NVIDIA-driver-535 -y
Or let Ubuntu tool to select the version automatically
command:   sudo ubuntu-drivers autoinstall
validate that the drivers installed correctly, note the CUDA version will be shown
command:   NVIDIA-smi 

Update ~/.bashrc and verify (nvcc -V) 

command:   export PATH=/usr/local/cuda-12.1.1/bincommand:  {PATH:+:command:  {PATH}}
command:   export LD_LIBRARY_PATH=/usr/local/cuda-12.1.1/lib64command:  {LD_LIBRARY_PATH:+:command:  {LD_LIBRARY_PATH}}
command:   export CUDA_HOME=/usr/local/cuda-12.1.1
command:   source ~/.bashrc
command:   sudo ldconfig
command:   nvcc -V

Python3 and hsl4ml AI framework

Setting up hls4ml in terminal
  command:   cd <path>/AI_NPU_CNN_3
  command:   git clone https://github.com/fastmachinelearning/hls4ml-tutorial
if you could not git clone, you may uncompress the hls4ml-tutorial.zip
  command:   cd hls4ml-tutorial
  command:   cp ../hls4ml-tutorial-config/environment.yml  . 
  command:   conda env create -f environment.yml

Activate conda env and FPGA environment

Activate hls4ml in terminal (the Conda env hls4ml-tutorial)
  command:   conda activate hls4ml-tutorial
Initialize FPGA environment (depend on your installation path)
  command:   source <your path>/Xilinx/Vitis/2020.2/settings64.sh
We will need Vivado (HW and HLS) as well as Vitis (S/W)
Export environment variable for Python to call FPGA tools
  command:   export XILINX_VIVADO =<your path>/Xilinx/Vivado/2020.2 
  
note : replace <your path> with your real Installation directory 
  
Lab environment initialization  

Open a terminal
  command: cd ~/AI_NPU_CNN_3/Covid19-CNN
conda command				: conda activate hls4ml-tutorial
setting FPGA Tool command	: source /mnt/Data/Xilinx/Vitis/2020.2/settings64.sh
  command: export XILINX_VIVADO=/mnt/Data/Xilinx/Vivado/2020.2 
Invoke jupyter lab 
  command: jupyter lab 
A jupyter lab client will be opened in default Web browser  

note : replace "/mnt/Data" with your real Installation directory 

