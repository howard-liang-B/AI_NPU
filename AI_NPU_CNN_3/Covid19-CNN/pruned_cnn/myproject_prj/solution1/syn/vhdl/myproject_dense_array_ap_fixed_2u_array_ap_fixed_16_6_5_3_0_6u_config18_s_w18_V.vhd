-- ==============================================================
-- Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- ==============================================================
library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity myproject_dense_array_ap_fixed_2u_array_ap_fixed_16_6_5_3_0_6u_config18_s_w18_V_rom is 
    generic(
             DWIDTH     : integer := 11; 
             AWIDTH     : integer := 9; 
             MEM_SIZE    : integer := 432
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          addr1      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce1       : in std_logic; 
          q1         : out std_logic_vector(DWIDTH-1 downto 0);
          addr2      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce2       : in std_logic; 
          q2         : out std_logic_vector(DWIDTH-1 downto 0);
          addr3      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce3       : in std_logic; 
          q3         : out std_logic_vector(DWIDTH-1 downto 0);
          addr4      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce4       : in std_logic; 
          q4         : out std_logic_vector(DWIDTH-1 downto 0);
          addr5      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce5       : in std_logic; 
          q5         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of myproject_dense_array_ap_fixed_2u_array_ap_fixed_16_6_5_3_0_6u_config18_s_w18_V_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
signal addr1_tmp : std_logic_vector(AWIDTH-1 downto 0); 
signal addr2_tmp : std_logic_vector(AWIDTH-1 downto 0); 
signal addr3_tmp : std_logic_vector(AWIDTH-1 downto 0); 
signal addr4_tmp : std_logic_vector(AWIDTH-1 downto 0); 
signal addr5_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem0 : mem_array := (
    0 => "11000100101", 1 => "11110010011", 2 => "11011001101", 
    3 => "00100011000", 4 => "11000001100", 5 => "00000000000", 
    6 => "11111010100", 7 => "11110110110", 8 => "00000111110", 
    9 => "00000000001", 10 => "11100110100", 11 => "00010000001", 
    12 => "11100001101", 13 => "00000011000", 14 => "00000000000", 
    15 => "11101110110", 16 => "00010000100", 17 => "00000000000", 
    18 => "00000011001", 19 => "00000000000", 20 => "00001001010", 
    21 to 22=> "00000000000", 23 => "00000001010", 24 => "00101000101", 
    25 => "00000000000", 26 => "11110110110", 27 => "00000000000", 
    28 => "00010000001", 29 => "00000000000", 30 => "00011100000", 
    31 => "11100111001", 32 to 33=> "00000000000", 34 => "00010011100", 
    35 => "00000000000", 36 => "11010000011", 37 => "00010000110", 
    38 => "00001101110", 39 => "00000001010", 40 => "11001111000", 
    41 => "11101011000", 42 => "11100101000", 43 => "11100101100", 
    44 => "11110111100", 45 => "11100010111", 46 => "00010010010", 
    47 => "11011010100", 48 => "00000000000", 49 => "11111010110", 
    50 => "00000000000", 51 => "11010110101", 52 => "00000000000", 
    53 => "11101000101", 54 => "00100101010", 55 => "11101010101", 
    56 => "00000000000", 57 => "00000110011", 58 => "11111011100", 
    59 => "11111001110", 60 => "00000000000", 61 => "11100111001", 
    62 => "11111100000", 63 => "11110001001", 64 => "00010110011", 
    65 to 68=> "00000000000", 69 => "00001100000", 70 => "11101011011", 
    71 => "00001100101", 72 => "11110010011", 73 => "11110011000", 
    74 => "11011100101", 75 => "11111011111", 76 => "11110010011", 
    77 => "11111011010", 78 => "11101111101", 79 => "00010001001", 
    80 => "00000000000", 81 => "00001111100", 82 => "11100110100", 
    83 => "00000000000", 84 => "00111111110", 85 => "00100011010", 
    86 => "00000001000", 87 to 88=> "00000000000", 89 => "11100110000", 
    90 => "11101111111", 91 to 92=> "00000110000", 93 => "11110110111", 
    94 => "11110111010", 95 => "00000011000", 96 => "11101010000", 
    97 => "00100100110", 98 => "00001100101", 99 to 101=> "00000000000", 
    102 => "00011000000", 103 => "11011000001", 104 => "11101101111", 
    105 => "00000000000", 106 => "00001110111", 107 => "00000000000", 
    108 => "11110010101", 109 => "00010010100", 110 => "11111010110", 
    111 => "00000001100", 112 => "00001010000", 113 => "11110011110", 
    114 => "11111110000", 115 => "00000000000", 116 => "11010101001", 
    117 => "00000000000", 118 => "00010000001", 119 => "00000100101", 
    120 to 121=> "00000000000", 122 => "11110010110", 123 => "11111011100", 
    124 => "11110001100", 125 => "00000000000", 126 => "00001101011", 
    127 => "11110000011", 128 => "11111101100", 129 => "00000000000", 
    130 => "00011001010", 131 => "00001101011", 132 => "00101000100", 
    133 => "00001001111", 134 => "11100101001", 135 => "00100011100", 
    136 => "00010100111", 137 => "11101001010", 138 => "00011001011", 
    139 => "00010100000", 140 => "00000101001", 141 => "00000000000", 
    142 => "00001111001", 143 => "00011001001", 144 => "00000000000", 
    145 => "11011011001", 146 => "11110001000", 147 => "11100000000", 
    148 => "00011001100", 149 => "11111111011", 150 => "00100100100", 
    151 => "00101011100", 152 => "11111111001", 153 => "11111001010", 
    154 => "11110010111", 155 => "00000000000", 156 => "00001111110", 
    157 => "00000000000", 158 => "00100100101", 159 => "11001110010", 
    160 => "11110111000", 161 => "11101000011", 162 => "00011100010", 
    163 to 164=> "00000000000", 165 => "00000100111", 166 to 168=> "00000000000", 
    169 => "00010011111", 170 => "00101001111", 171 => "11011100101", 
    172 => "00000000000", 173 => "11100001001", 174 => "00000111110", 
    175 => "11000011010", 176 to 179=> "00000000000", 180 => "11101101000", 
    181 => "00101100101", 182 => "00000000000", 183 => "11011011110", 
    184 => "00010110110", 185 => "00000000000", 186 => "11111000000", 
    187 => "11110010101", 188 => "11101101110", 189 => "00000000000", 
    190 => "11110000001", 191 => "00010001101", 192 => "00000000000", 
    193 => "00011010000", 194 => "00000000000", 195 => "00111000110", 
    196 => "11111111011", 197 => "00001001000", 198 => "00000001010", 
    199 => "00000101000", 200 => "11101010000", 201 => "11101011010", 
    202 to 205=> "00000000000", 206 => "11011001000", 207 => "00001100010", 
    208 => "11111100000", 209 => "11101100111", 210 => "00011100111", 
    211 => "00100101000", 212 => "00001000011", 213 => "00101000010", 
    214 => "00001111011", 215 => "00000000000", 216 => "11100100111", 
    217 => "11111100001", 218 => "11110101110", 219 => "11011111101", 
    220 => "11110111011", 221 => "11111001110", 222 => "00101001111", 
    223 => "00010111010", 224 => "11110010101", 225 => "00011000000", 
    226 to 227=> "00000000000", 228 => "11110110011", 229 => "11110011000", 
    230 => "00001110100", 231 => "11001010011", 232 => "00000000000", 
    233 => "00011010010", 234 => "11111110011", 235 => "00000000000", 
    236 => "11110011101", 237 => "00000000000", 238 => "00100000110", 
    239 => "00001110011", 240 => "00101001000", 241 => "00000110000", 
    242 => "00011110100", 243 => "11011010001", 244 => "11111111010", 
    245 => "00000110110", 246 => "11111000101", 247 => "11101011100", 
    248 => "00000000000", 249 => "11101110101", 250 => "00011101000", 
    251 => "00011011111", 252 => "00010110010", 253 => "00001001001", 
    254 => "00001110000", 255 => "00101101011", 256 => "00010011111", 
    257 => "00011001100", 258 => "10110000001", 259 => "11100000000", 
    260 => "11110110111", 261 => "00000000000", 262 => "00001100111", 
    263 => "00010010011", 264 to 267=> "00000000000", 268 => "00010011110", 
    269 => "11100011000", 270 to 271=> "00000000000", 272 => "11110011110", 
    273 => "11001100000", 274 => "11110111100", 275 => "00001101111", 
    276 => "11011101001", 277 => "00000000110", 278 => "11010110100", 
    279 => "01000010111", 280 => "00000011101", 281 => "11101110100", 
    282 => "00000000000", 283 => "11110111001", 284 => "00001001011", 
    285 => "11101001000", 286 => "00001101111", 287 => "00000110001", 
    288 => "11010000001", 289 => "00000000000", 290 => "11111001000", 
    291 to 293=> "00000000000", 294 => "00010000011", 295 => "00010111011", 
    296 => "00000000000", 297 => "00001100111", 298 => "11110110111", 
    299 to 300=> "00000000000", 301 => "11100100000", 302 => "00000000000", 
    303 => "11100001111", 304 => "00000000000", 305 => "00010110111", 
    306 => "00001011110", 307 => "11111100100", 308 => "11101010001", 
    309 => "00011001110", 310 => "00101010111", 311 => "00010011110", 
    312 => "11110010011", 313 => "11110001010", 314 => "00010110000", 
    315 => "11100010010", 316 => "00011100110", 317 to 318=> "00000000000", 
    319 => "11110011001", 320 => "11011100010", 321 => "11111001110", 
    322 => "00001110010", 323 => "00000110010", 324 => "00000110000", 
    325 => "00000000000", 326 => "00001111000", 327 => "00010101001", 
    328 => "01011011100", 329 to 330=> "00000000000", 331 => "11100111000", 
    332 => "11110111010", 333 => "10000000000", 334 => "00111011111", 
    335 => "00010111101", 336 => "00000110110", 337 => "11110110010", 
    338 => "11111110111", 339 => "00110101001", 340 => "00101011000", 
    341 => "00000000000", 342 => "11101111010", 343 => "00000001100", 
    344 => "00000000000", 345 => "11101001111", 346 to 347=> "00000000000", 
    348 => "11110001100", 349 => "00000010110", 350 => "11110110010", 
    351 => "00011100101", 352 => "00101100110", 353 => "00000000000", 
    354 => "00000101010", 355 => "00000000000", 356 => "00000111000", 
    357 => "11110101100", 358 => "00000111010", 359 => "00001000001", 
    360 => "00000010100", 361 => "00011000011", 362 => "00001100101", 
    363 => "00000010000", 364 => "00010100010", 365 => "11101111010", 
    366 => "00000000000", 367 => "00010001010", 368 => "11101101111", 
    369 => "00000011101", 370 => "00000100101", 371 => "00000001000", 
    372 to 373=> "00000000000", 374 => "11111000001", 375 => "11111100100", 
    376 => "00000000000", 377 => "00001010100", 378 => "00000000000", 
    379 => "00001100110", 380 => "11100010000", 381 => "00001000111", 
    382 => "01000000010", 383 => "00010110101", 384 => "00000001111", 
    385 => "11100110101", 386 => "00000000011", 387 => "00000000000", 
    388 => "10110111110", 389 => "00011000101", 390 => "11011011010", 
    391 => "11111011001", 392 => "11101011010", 393 => "00000000000", 
    394 => "00110010010", 395 => "00000100110", 396 => "11001011000", 
    397 => "00000000000", 398 => "00011111011", 399 => "01010001111", 
    400 => "11111100100", 401 => "00110110010", 402 => "00011011100", 
    403 => "00010100100", 404 => "11110101101", 405 => "10101101111", 
    406 => "01010000111", 407 => "00000000000", 408 => "11111010101", 
    409 => "11101010100", 410 => "00000000000", 411 => "11111110011", 
    412 => "11100000100", 413 => "00100100101", 414 => "11101101101", 
    415 => "00001011010", 416 => "00000000000", 417 => "11101101101", 
    418 => "11101100000", 419 => "11110101110", 420 => "00000011001", 
    421 => "00000000000", 422 => "11101110000", 423 => "10101111001", 
    424 => "00000000000", 425 => "11011100110", 426 => "00100011100", 
    427 => "00000000000", 428 => "00000111000", 429 => "00001010111", 
    430 => "11110011011", 431 => "00001000000" );
signal mem1 : mem_array := (
    0 => "11000100101", 1 => "11110010011", 2 => "11011001101", 
    3 => "00100011000", 4 => "11000001100", 5 => "00000000000", 
    6 => "11111010100", 7 => "11110110110", 8 => "00000111110", 
    9 => "00000000001", 10 => "11100110100", 11 => "00010000001", 
    12 => "11100001101", 13 => "00000011000", 14 => "00000000000", 
    15 => "11101110110", 16 => "00010000100", 17 => "00000000000", 
    18 => "00000011001", 19 => "00000000000", 20 => "00001001010", 
    21 to 22=> "00000000000", 23 => "00000001010", 24 => "00101000101", 
    25 => "00000000000", 26 => "11110110110", 27 => "00000000000", 
    28 => "00010000001", 29 => "00000000000", 30 => "00011100000", 
    31 => "11100111001", 32 to 33=> "00000000000", 34 => "00010011100", 
    35 => "00000000000", 36 => "11010000011", 37 => "00010000110", 
    38 => "00001101110", 39 => "00000001010", 40 => "11001111000", 
    41 => "11101011000", 42 => "11100101000", 43 => "11100101100", 
    44 => "11110111100", 45 => "11100010111", 46 => "00010010010", 
    47 => "11011010100", 48 => "00000000000", 49 => "11111010110", 
    50 => "00000000000", 51 => "11010110101", 52 => "00000000000", 
    53 => "11101000101", 54 => "00100101010", 55 => "11101010101", 
    56 => "00000000000", 57 => "00000110011", 58 => "11111011100", 
    59 => "11111001110", 60 => "00000000000", 61 => "11100111001", 
    62 => "11111100000", 63 => "11110001001", 64 => "00010110011", 
    65 to 68=> "00000000000", 69 => "00001100000", 70 => "11101011011", 
    71 => "00001100101", 72 => "11110010011", 73 => "11110011000", 
    74 => "11011100101", 75 => "11111011111", 76 => "11110010011", 
    77 => "11111011010", 78 => "11101111101", 79 => "00010001001", 
    80 => "00000000000", 81 => "00001111100", 82 => "11100110100", 
    83 => "00000000000", 84 => "00111111110", 85 => "00100011010", 
    86 => "00000001000", 87 to 88=> "00000000000", 89 => "11100110000", 
    90 => "11101111111", 91 to 92=> "00000110000", 93 => "11110110111", 
    94 => "11110111010", 95 => "00000011000", 96 => "11101010000", 
    97 => "00100100110", 98 => "00001100101", 99 to 101=> "00000000000", 
    102 => "00011000000", 103 => "11011000001", 104 => "11101101111", 
    105 => "00000000000", 106 => "00001110111", 107 => "00000000000", 
    108 => "11110010101", 109 => "00010010100", 110 => "11111010110", 
    111 => "00000001100", 112 => "00001010000", 113 => "11110011110", 
    114 => "11111110000", 115 => "00000000000", 116 => "11010101001", 
    117 => "00000000000", 118 => "00010000001", 119 => "00000100101", 
    120 to 121=> "00000000000", 122 => "11110010110", 123 => "11111011100", 
    124 => "11110001100", 125 => "00000000000", 126 => "00001101011", 
    127 => "11110000011", 128 => "11111101100", 129 => "00000000000", 
    130 => "00011001010", 131 => "00001101011", 132 => "00101000100", 
    133 => "00001001111", 134 => "11100101001", 135 => "00100011100", 
    136 => "00010100111", 137 => "11101001010", 138 => "00011001011", 
    139 => "00010100000", 140 => "00000101001", 141 => "00000000000", 
    142 => "00001111001", 143 => "00011001001", 144 => "00000000000", 
    145 => "11011011001", 146 => "11110001000", 147 => "11100000000", 
    148 => "00011001100", 149 => "11111111011", 150 => "00100100100", 
    151 => "00101011100", 152 => "11111111001", 153 => "11111001010", 
    154 => "11110010111", 155 => "00000000000", 156 => "00001111110", 
    157 => "00000000000", 158 => "00100100101", 159 => "11001110010", 
    160 => "11110111000", 161 => "11101000011", 162 => "00011100010", 
    163 to 164=> "00000000000", 165 => "00000100111", 166 to 168=> "00000000000", 
    169 => "00010011111", 170 => "00101001111", 171 => "11011100101", 
    172 => "00000000000", 173 => "11100001001", 174 => "00000111110", 
    175 => "11000011010", 176 to 179=> "00000000000", 180 => "11101101000", 
    181 => "00101100101", 182 => "00000000000", 183 => "11011011110", 
    184 => "00010110110", 185 => "00000000000", 186 => "11111000000", 
    187 => "11110010101", 188 => "11101101110", 189 => "00000000000", 
    190 => "11110000001", 191 => "00010001101", 192 => "00000000000", 
    193 => "00011010000", 194 => "00000000000", 195 => "00111000110", 
    196 => "11111111011", 197 => "00001001000", 198 => "00000001010", 
    199 => "00000101000", 200 => "11101010000", 201 => "11101011010", 
    202 to 205=> "00000000000", 206 => "11011001000", 207 => "00001100010", 
    208 => "11111100000", 209 => "11101100111", 210 => "00011100111", 
    211 => "00100101000", 212 => "00001000011", 213 => "00101000010", 
    214 => "00001111011", 215 => "00000000000", 216 => "11100100111", 
    217 => "11111100001", 218 => "11110101110", 219 => "11011111101", 
    220 => "11110111011", 221 => "11111001110", 222 => "00101001111", 
    223 => "00010111010", 224 => "11110010101", 225 => "00011000000", 
    226 to 227=> "00000000000", 228 => "11110110011", 229 => "11110011000", 
    230 => "00001110100", 231 => "11001010011", 232 => "00000000000", 
    233 => "00011010010", 234 => "11111110011", 235 => "00000000000", 
    236 => "11110011101", 237 => "00000000000", 238 => "00100000110", 
    239 => "00001110011", 240 => "00101001000", 241 => "00000110000", 
    242 => "00011110100", 243 => "11011010001", 244 => "11111111010", 
    245 => "00000110110", 246 => "11111000101", 247 => "11101011100", 
    248 => "00000000000", 249 => "11101110101", 250 => "00011101000", 
    251 => "00011011111", 252 => "00010110010", 253 => "00001001001", 
    254 => "00001110000", 255 => "00101101011", 256 => "00010011111", 
    257 => "00011001100", 258 => "10110000001", 259 => "11100000000", 
    260 => "11110110111", 261 => "00000000000", 262 => "00001100111", 
    263 => "00010010011", 264 to 267=> "00000000000", 268 => "00010011110", 
    269 => "11100011000", 270 to 271=> "00000000000", 272 => "11110011110", 
    273 => "11001100000", 274 => "11110111100", 275 => "00001101111", 
    276 => "11011101001", 277 => "00000000110", 278 => "11010110100", 
    279 => "01000010111", 280 => "00000011101", 281 => "11101110100", 
    282 => "00000000000", 283 => "11110111001", 284 => "00001001011", 
    285 => "11101001000", 286 => "00001101111", 287 => "00000110001", 
    288 => "11010000001", 289 => "00000000000", 290 => "11111001000", 
    291 to 293=> "00000000000", 294 => "00010000011", 295 => "00010111011", 
    296 => "00000000000", 297 => "00001100111", 298 => "11110110111", 
    299 to 300=> "00000000000", 301 => "11100100000", 302 => "00000000000", 
    303 => "11100001111", 304 => "00000000000", 305 => "00010110111", 
    306 => "00001011110", 307 => "11111100100", 308 => "11101010001", 
    309 => "00011001110", 310 => "00101010111", 311 => "00010011110", 
    312 => "11110010011", 313 => "11110001010", 314 => "00010110000", 
    315 => "11100010010", 316 => "00011100110", 317 to 318=> "00000000000", 
    319 => "11110011001", 320 => "11011100010", 321 => "11111001110", 
    322 => "00001110010", 323 => "00000110010", 324 => "00000110000", 
    325 => "00000000000", 326 => "00001111000", 327 => "00010101001", 
    328 => "01011011100", 329 to 330=> "00000000000", 331 => "11100111000", 
    332 => "11110111010", 333 => "10000000000", 334 => "00111011111", 
    335 => "00010111101", 336 => "00000110110", 337 => "11110110010", 
    338 => "11111110111", 339 => "00110101001", 340 => "00101011000", 
    341 => "00000000000", 342 => "11101111010", 343 => "00000001100", 
    344 => "00000000000", 345 => "11101001111", 346 to 347=> "00000000000", 
    348 => "11110001100", 349 => "00000010110", 350 => "11110110010", 
    351 => "00011100101", 352 => "00101100110", 353 => "00000000000", 
    354 => "00000101010", 355 => "00000000000", 356 => "00000111000", 
    357 => "11110101100", 358 => "00000111010", 359 => "00001000001", 
    360 => "00000010100", 361 => "00011000011", 362 => "00001100101", 
    363 => "00000010000", 364 => "00010100010", 365 => "11101111010", 
    366 => "00000000000", 367 => "00010001010", 368 => "11101101111", 
    369 => "00000011101", 370 => "00000100101", 371 => "00000001000", 
    372 to 373=> "00000000000", 374 => "11111000001", 375 => "11111100100", 
    376 => "00000000000", 377 => "00001010100", 378 => "00000000000", 
    379 => "00001100110", 380 => "11100010000", 381 => "00001000111", 
    382 => "01000000010", 383 => "00010110101", 384 => "00000001111", 
    385 => "11100110101", 386 => "00000000011", 387 => "00000000000", 
    388 => "10110111110", 389 => "00011000101", 390 => "11011011010", 
    391 => "11111011001", 392 => "11101011010", 393 => "00000000000", 
    394 => "00110010010", 395 => "00000100110", 396 => "11001011000", 
    397 => "00000000000", 398 => "00011111011", 399 => "01010001111", 
    400 => "11111100100", 401 => "00110110010", 402 => "00011011100", 
    403 => "00010100100", 404 => "11110101101", 405 => "10101101111", 
    406 => "01010000111", 407 => "00000000000", 408 => "11111010101", 
    409 => "11101010100", 410 => "00000000000", 411 => "11111110011", 
    412 => "11100000100", 413 => "00100100101", 414 => "11101101101", 
    415 => "00001011010", 416 => "00000000000", 417 => "11101101101", 
    418 => "11101100000", 419 => "11110101110", 420 => "00000011001", 
    421 => "00000000000", 422 => "11101110000", 423 => "10101111001", 
    424 => "00000000000", 425 => "11011100110", 426 => "00100011100", 
    427 => "00000000000", 428 => "00000111000", 429 => "00001010111", 
    430 => "11110011011", 431 => "00001000000" );
signal mem2 : mem_array := (
    0 => "11000100101", 1 => "11110010011", 2 => "11011001101", 
    3 => "00100011000", 4 => "11000001100", 5 => "00000000000", 
    6 => "11111010100", 7 => "11110110110", 8 => "00000111110", 
    9 => "00000000001", 10 => "11100110100", 11 => "00010000001", 
    12 => "11100001101", 13 => "00000011000", 14 => "00000000000", 
    15 => "11101110110", 16 => "00010000100", 17 => "00000000000", 
    18 => "00000011001", 19 => "00000000000", 20 => "00001001010", 
    21 to 22=> "00000000000", 23 => "00000001010", 24 => "00101000101", 
    25 => "00000000000", 26 => "11110110110", 27 => "00000000000", 
    28 => "00010000001", 29 => "00000000000", 30 => "00011100000", 
    31 => "11100111001", 32 to 33=> "00000000000", 34 => "00010011100", 
    35 => "00000000000", 36 => "11010000011", 37 => "00010000110", 
    38 => "00001101110", 39 => "00000001010", 40 => "11001111000", 
    41 => "11101011000", 42 => "11100101000", 43 => "11100101100", 
    44 => "11110111100", 45 => "11100010111", 46 => "00010010010", 
    47 => "11011010100", 48 => "00000000000", 49 => "11111010110", 
    50 => "00000000000", 51 => "11010110101", 52 => "00000000000", 
    53 => "11101000101", 54 => "00100101010", 55 => "11101010101", 
    56 => "00000000000", 57 => "00000110011", 58 => "11111011100", 
    59 => "11111001110", 60 => "00000000000", 61 => "11100111001", 
    62 => "11111100000", 63 => "11110001001", 64 => "00010110011", 
    65 to 68=> "00000000000", 69 => "00001100000", 70 => "11101011011", 
    71 => "00001100101", 72 => "11110010011", 73 => "11110011000", 
    74 => "11011100101", 75 => "11111011111", 76 => "11110010011", 
    77 => "11111011010", 78 => "11101111101", 79 => "00010001001", 
    80 => "00000000000", 81 => "00001111100", 82 => "11100110100", 
    83 => "00000000000", 84 => "00111111110", 85 => "00100011010", 
    86 => "00000001000", 87 to 88=> "00000000000", 89 => "11100110000", 
    90 => "11101111111", 91 to 92=> "00000110000", 93 => "11110110111", 
    94 => "11110111010", 95 => "00000011000", 96 => "11101010000", 
    97 => "00100100110", 98 => "00001100101", 99 to 101=> "00000000000", 
    102 => "00011000000", 103 => "11011000001", 104 => "11101101111", 
    105 => "00000000000", 106 => "00001110111", 107 => "00000000000", 
    108 => "11110010101", 109 => "00010010100", 110 => "11111010110", 
    111 => "00000001100", 112 => "00001010000", 113 => "11110011110", 
    114 => "11111110000", 115 => "00000000000", 116 => "11010101001", 
    117 => "00000000000", 118 => "00010000001", 119 => "00000100101", 
    120 to 121=> "00000000000", 122 => "11110010110", 123 => "11111011100", 
    124 => "11110001100", 125 => "00000000000", 126 => "00001101011", 
    127 => "11110000011", 128 => "11111101100", 129 => "00000000000", 
    130 => "00011001010", 131 => "00001101011", 132 => "00101000100", 
    133 => "00001001111", 134 => "11100101001", 135 => "00100011100", 
    136 => "00010100111", 137 => "11101001010", 138 => "00011001011", 
    139 => "00010100000", 140 => "00000101001", 141 => "00000000000", 
    142 => "00001111001", 143 => "00011001001", 144 => "00000000000", 
    145 => "11011011001", 146 => "11110001000", 147 => "11100000000", 
    148 => "00011001100", 149 => "11111111011", 150 => "00100100100", 
    151 => "00101011100", 152 => "11111111001", 153 => "11111001010", 
    154 => "11110010111", 155 => "00000000000", 156 => "00001111110", 
    157 => "00000000000", 158 => "00100100101", 159 => "11001110010", 
    160 => "11110111000", 161 => "11101000011", 162 => "00011100010", 
    163 to 164=> "00000000000", 165 => "00000100111", 166 to 168=> "00000000000", 
    169 => "00010011111", 170 => "00101001111", 171 => "11011100101", 
    172 => "00000000000", 173 => "11100001001", 174 => "00000111110", 
    175 => "11000011010", 176 to 179=> "00000000000", 180 => "11101101000", 
    181 => "00101100101", 182 => "00000000000", 183 => "11011011110", 
    184 => "00010110110", 185 => "00000000000", 186 => "11111000000", 
    187 => "11110010101", 188 => "11101101110", 189 => "00000000000", 
    190 => "11110000001", 191 => "00010001101", 192 => "00000000000", 
    193 => "00011010000", 194 => "00000000000", 195 => "00111000110", 
    196 => "11111111011", 197 => "00001001000", 198 => "00000001010", 
    199 => "00000101000", 200 => "11101010000", 201 => "11101011010", 
    202 to 205=> "00000000000", 206 => "11011001000", 207 => "00001100010", 
    208 => "11111100000", 209 => "11101100111", 210 => "00011100111", 
    211 => "00100101000", 212 => "00001000011", 213 => "00101000010", 
    214 => "00001111011", 215 => "00000000000", 216 => "11100100111", 
    217 => "11111100001", 218 => "11110101110", 219 => "11011111101", 
    220 => "11110111011", 221 => "11111001110", 222 => "00101001111", 
    223 => "00010111010", 224 => "11110010101", 225 => "00011000000", 
    226 to 227=> "00000000000", 228 => "11110110011", 229 => "11110011000", 
    230 => "00001110100", 231 => "11001010011", 232 => "00000000000", 
    233 => "00011010010", 234 => "11111110011", 235 => "00000000000", 
    236 => "11110011101", 237 => "00000000000", 238 => "00100000110", 
    239 => "00001110011", 240 => "00101001000", 241 => "00000110000", 
    242 => "00011110100", 243 => "11011010001", 244 => "11111111010", 
    245 => "00000110110", 246 => "11111000101", 247 => "11101011100", 
    248 => "00000000000", 249 => "11101110101", 250 => "00011101000", 
    251 => "00011011111", 252 => "00010110010", 253 => "00001001001", 
    254 => "00001110000", 255 => "00101101011", 256 => "00010011111", 
    257 => "00011001100", 258 => "10110000001", 259 => "11100000000", 
    260 => "11110110111", 261 => "00000000000", 262 => "00001100111", 
    263 => "00010010011", 264 to 267=> "00000000000", 268 => "00010011110", 
    269 => "11100011000", 270 to 271=> "00000000000", 272 => "11110011110", 
    273 => "11001100000", 274 => "11110111100", 275 => "00001101111", 
    276 => "11011101001", 277 => "00000000110", 278 => "11010110100", 
    279 => "01000010111", 280 => "00000011101", 281 => "11101110100", 
    282 => "00000000000", 283 => "11110111001", 284 => "00001001011", 
    285 => "11101001000", 286 => "00001101111", 287 => "00000110001", 
    288 => "11010000001", 289 => "00000000000", 290 => "11111001000", 
    291 to 293=> "00000000000", 294 => "00010000011", 295 => "00010111011", 
    296 => "00000000000", 297 => "00001100111", 298 => "11110110111", 
    299 to 300=> "00000000000", 301 => "11100100000", 302 => "00000000000", 
    303 => "11100001111", 304 => "00000000000", 305 => "00010110111", 
    306 => "00001011110", 307 => "11111100100", 308 => "11101010001", 
    309 => "00011001110", 310 => "00101010111", 311 => "00010011110", 
    312 => "11110010011", 313 => "11110001010", 314 => "00010110000", 
    315 => "11100010010", 316 => "00011100110", 317 to 318=> "00000000000", 
    319 => "11110011001", 320 => "11011100010", 321 => "11111001110", 
    322 => "00001110010", 323 => "00000110010", 324 => "00000110000", 
    325 => "00000000000", 326 => "00001111000", 327 => "00010101001", 
    328 => "01011011100", 329 to 330=> "00000000000", 331 => "11100111000", 
    332 => "11110111010", 333 => "10000000000", 334 => "00111011111", 
    335 => "00010111101", 336 => "00000110110", 337 => "11110110010", 
    338 => "11111110111", 339 => "00110101001", 340 => "00101011000", 
    341 => "00000000000", 342 => "11101111010", 343 => "00000001100", 
    344 => "00000000000", 345 => "11101001111", 346 to 347=> "00000000000", 
    348 => "11110001100", 349 => "00000010110", 350 => "11110110010", 
    351 => "00011100101", 352 => "00101100110", 353 => "00000000000", 
    354 => "00000101010", 355 => "00000000000", 356 => "00000111000", 
    357 => "11110101100", 358 => "00000111010", 359 => "00001000001", 
    360 => "00000010100", 361 => "00011000011", 362 => "00001100101", 
    363 => "00000010000", 364 => "00010100010", 365 => "11101111010", 
    366 => "00000000000", 367 => "00010001010", 368 => "11101101111", 
    369 => "00000011101", 370 => "00000100101", 371 => "00000001000", 
    372 to 373=> "00000000000", 374 => "11111000001", 375 => "11111100100", 
    376 => "00000000000", 377 => "00001010100", 378 => "00000000000", 
    379 => "00001100110", 380 => "11100010000", 381 => "00001000111", 
    382 => "01000000010", 383 => "00010110101", 384 => "00000001111", 
    385 => "11100110101", 386 => "00000000011", 387 => "00000000000", 
    388 => "10110111110", 389 => "00011000101", 390 => "11011011010", 
    391 => "11111011001", 392 => "11101011010", 393 => "00000000000", 
    394 => "00110010010", 395 => "00000100110", 396 => "11001011000", 
    397 => "00000000000", 398 => "00011111011", 399 => "01010001111", 
    400 => "11111100100", 401 => "00110110010", 402 => "00011011100", 
    403 => "00010100100", 404 => "11110101101", 405 => "10101101111", 
    406 => "01010000111", 407 => "00000000000", 408 => "11111010101", 
    409 => "11101010100", 410 => "00000000000", 411 => "11111110011", 
    412 => "11100000100", 413 => "00100100101", 414 => "11101101101", 
    415 => "00001011010", 416 => "00000000000", 417 => "11101101101", 
    418 => "11101100000", 419 => "11110101110", 420 => "00000011001", 
    421 => "00000000000", 422 => "11101110000", 423 => "10101111001", 
    424 => "00000000000", 425 => "11011100110", 426 => "00100011100", 
    427 => "00000000000", 428 => "00000111000", 429 => "00001010111", 
    430 => "11110011011", 431 => "00001000000" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

memory_access_guard_1: process (addr1) 
begin
      addr1_tmp <= addr1;
--synthesis translate_off
      if (CONV_INTEGER(addr1) > mem_size-1) then
           addr1_tmp <= (others => '0');
      else 
           addr1_tmp <= addr1;
      end if;
--synthesis translate_on
end process;

memory_access_guard_2: process (addr2) 
begin
      addr2_tmp <= addr2;
--synthesis translate_off
      if (CONV_INTEGER(addr2) > mem_size-1) then
           addr2_tmp <= (others => '0');
      else 
           addr2_tmp <= addr2;
      end if;
--synthesis translate_on
end process;

memory_access_guard_3: process (addr3) 
begin
      addr3_tmp <= addr3;
--synthesis translate_off
      if (CONV_INTEGER(addr3) > mem_size-1) then
           addr3_tmp <= (others => '0');
      else 
           addr3_tmp <= addr3;
      end if;
--synthesis translate_on
end process;

memory_access_guard_4: process (addr4) 
begin
      addr4_tmp <= addr4;
--synthesis translate_off
      if (CONV_INTEGER(addr4) > mem_size-1) then
           addr4_tmp <= (others => '0');
      else 
           addr4_tmp <= addr4;
      end if;
--synthesis translate_on
end process;

memory_access_guard_5: process (addr5) 
begin
      addr5_tmp <= addr5;
--synthesis translate_off
      if (CONV_INTEGER(addr5) > mem_size-1) then
           addr5_tmp <= (others => '0');
      else 
           addr5_tmp <= addr5;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem0(CONV_INTEGER(addr0_tmp)); 
        end if;
        if (ce1 = '1') then 
            q1 <= mem0(CONV_INTEGER(addr1_tmp)); 
        end if;
        if (ce2 = '1') then 
            q2 <= mem1(CONV_INTEGER(addr2_tmp)); 
        end if;
        if (ce3 = '1') then 
            q3 <= mem1(CONV_INTEGER(addr3_tmp)); 
        end if;
        if (ce4 = '1') then 
            q4 <= mem2(CONV_INTEGER(addr4_tmp)); 
        end if;
        if (ce5 = '1') then 
            q5 <= mem2(CONV_INTEGER(addr5_tmp)); 
        end if;
    end if;
end process;

end rtl;

Library IEEE;
use IEEE.std_logic_1164.all;

entity myproject_dense_array_ap_fixed_2u_array_ap_fixed_16_6_5_3_0_6u_config18_s_w18_V is
    generic (
        DataWidth : INTEGER := 11;
        AddressRange : INTEGER := 432;
        AddressWidth : INTEGER := 9);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0);
        address1 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0);
        address2 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0);
        address3 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0);
        address4 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce4 : IN STD_LOGIC;
        q4 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0);
        address5 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce5 : IN STD_LOGIC;
        q5 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of myproject_dense_array_ap_fixed_2u_array_ap_fixed_16_6_5_3_0_6u_config18_s_w18_V is
    component myproject_dense_array_ap_fixed_2u_array_ap_fixed_16_6_5_3_0_6u_config18_s_w18_V_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR;
            addr1 : IN STD_LOGIC_VECTOR;
            ce1 : IN STD_LOGIC;
            q1 : OUT STD_LOGIC_VECTOR;
            addr2 : IN STD_LOGIC_VECTOR;
            ce2 : IN STD_LOGIC;
            q2 : OUT STD_LOGIC_VECTOR;
            addr3 : IN STD_LOGIC_VECTOR;
            ce3 : IN STD_LOGIC;
            q3 : OUT STD_LOGIC_VECTOR;
            addr4 : IN STD_LOGIC_VECTOR;
            ce4 : IN STD_LOGIC;
            q4 : OUT STD_LOGIC_VECTOR;
            addr5 : IN STD_LOGIC_VECTOR;
            ce5 : IN STD_LOGIC;
            q5 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    myproject_dense_array_ap_fixed_2u_array_ap_fixed_16_6_5_3_0_6u_config18_s_w18_V_rom_U :  component myproject_dense_array_ap_fixed_2u_array_ap_fixed_16_6_5_3_0_6u_config18_s_w18_V_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0,
        addr1 => address1,
        ce1 => ce1,
        q1 => q1,
        addr2 => address2,
        ce2 => ce2,
        q2 => q2,
        addr3 => address3,
        ce3 => ce3,
        q3 => q3,
        addr4 => address4,
        ce4 => ce4,
        q4 => q4,
        addr5 => address5,
        ce5 => ce5,
        q5 => q5);

end architecture;


