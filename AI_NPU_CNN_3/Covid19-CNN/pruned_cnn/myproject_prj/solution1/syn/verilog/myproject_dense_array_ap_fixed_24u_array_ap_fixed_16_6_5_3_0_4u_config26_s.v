// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module myproject_dense_array_ap_fixed_24u_array_ap_fixed_16_6_5_3_0_4u_config26_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        layer25_out_dout,
        layer25_out_empty_n,
        layer25_out_read,
        layer26_out_din,
        layer26_out_full_n,
        layer26_out_write
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_pp0_stage0 = 9'd2;
parameter    ap_ST_fsm_state6 = 9'd4;
parameter    ap_ST_fsm_state7 = 9'd8;
parameter    ap_ST_fsm_state8 = 9'd16;
parameter    ap_ST_fsm_pp2_stage0 = 9'd32;
parameter    ap_ST_fsm_state12 = 9'd64;
parameter    ap_ST_fsm_state13 = 9'd128;
parameter    ap_ST_fsm_state14 = 9'd256;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [383:0] layer25_out_dout;
input   layer25_out_empty_n;
output   layer25_out_read;
output  [63:0] layer26_out_din;
input   layer26_out_full_n;
output   layer26_out_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg layer25_out_read;
reg layer26_out_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
wire   [6:0] w26_V_address0;
reg    w26_V_ce0;
wire   [11:0] w26_V_q0;
wire   [6:0] w26_V_address1;
reg    w26_V_ce1;
wire   [11:0] w26_V_q1;
wire   [6:0] w26_V_address2;
reg    w26_V_ce2;
wire   [11:0] w26_V_q2;
wire   [6:0] w26_V_address3;
reg    w26_V_ce3;
wire   [11:0] w26_V_q3;
reg    layer25_out_blk_n;
reg    layer26_out_blk_n;
wire    ap_CS_fsm_state14;
reg   [4:0] ii_reg_734;
reg   [4:0] ii_reg_734_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_11001;
reg   [4:0] ii_reg_734_pp0_iter2_reg;
reg   [6:0] indvar_flatten_reg_757;
reg   [4:0] ii_3_reg_768;
reg   [2:0] jj_reg_779;
wire   [15:0] data_pack_fu_2086_p1;
reg   [15:0] data_pack_reg_4259;
reg   [15:0] data_pack_24_reg_4264;
reg   [15:0] data_pack_25_reg_4269;
reg   [15:0] data_pack_26_reg_4274;
reg   [15:0] data_pack_27_reg_4279;
reg   [15:0] data_pack_28_reg_4284;
reg   [15:0] data_pack_29_reg_4289;
reg   [15:0] data_pack_30_reg_4294;
reg   [15:0] data_pack_31_reg_4299;
reg   [15:0] data_pack_32_reg_4304;
reg   [15:0] data_pack_33_reg_4309;
reg   [15:0] data_pack_34_reg_4314;
reg   [15:0] data_pack_35_reg_4319;
reg   [15:0] data_pack_36_reg_4324;
reg   [15:0] data_pack_37_reg_4329;
reg   [15:0] data_pack_38_reg_4334;
reg   [15:0] data_pack_39_reg_4339;
reg   [15:0] data_pack_40_reg_4344;
reg   [15:0] data_pack_41_reg_4349;
reg   [15:0] data_pack_42_reg_4354;
reg   [15:0] data_pack_43_reg_4359;
reg   [15:0] data_pack_44_reg_4364;
reg   [15:0] data_pack_45_reg_4369;
reg   [15:0] data_pack_46_reg_4374;
wire   [4:0] add_ln37_fu_2320_p2;
reg   [4:0] add_ln37_reg_4379;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln37_fu_2326_p2;
reg   [0:0] icmp_ln37_reg_4384;
wire   [15:0] a_V_fu_2332_p26;
reg   [15:0] a_V_reg_4388;
reg   [15:0] a_V_reg_4388_pp0_iter1_reg;
reg  signed [11:0] w26_V_load_reg_4413;
reg    ap_enable_reg_pp0_iter1;
reg  signed [11:0] w26_V_load_1_reg_4418;
reg  signed [11:0] w26_V_load_2_reg_4423;
reg  signed [11:0] w26_V_load_3_reg_4428;
wire  signed [25:0] sext_ln1118_152_fu_2412_p1;
wire   [2:0] add_ln48_fu_2951_p2;
wire    ap_CS_fsm_state7;
reg   [15:0] acc_V_3_load_reg_4490;
reg   [15:0] acc_V_3_1_load_reg_4495;
reg   [15:0] acc_V_3_2_load_reg_4500;
reg   [15:0] acc_V_3_4_load_reg_4505;
wire   [6:0] add_ln54_fu_3029_p2;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_state9_pp2_stage0_iter0;
wire    ap_block_state10_pp2_stage0_iter1;
wire    ap_block_state11_pp2_stage0_iter2;
wire    ap_block_pp2_stage0_11001;
wire   [0:0] icmp_ln54_fu_3035_p2;
reg   [0:0] icmp_ln54_reg_4549;
wire   [4:0] select_ln54_5_fu_3061_p3;
reg   [4:0] select_ln54_5_reg_4553;
wire   [1:0] trunc_ln57_fu_3069_p1;
reg   [1:0] trunc_ln57_reg_4559;
reg   [1:0] trunc_ln57_reg_4559_pp2_iter1_reg;
wire   [2:0] add_ln56_fu_3073_p2;
wire   [15:0] tmp_fu_3367_p6;
reg   [15:0] tmp_reg_4570;
wire   [15:0] tmp_s_fu_3386_p98;
reg   [15:0] tmp_s_reg_4575;
wire   [2:0] add_ln64_fu_3608_p2;
wire    ap_CS_fsm_state13;
reg    ap_block_state1;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
wire    ap_CS_fsm_state8;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state9;
reg    ap_enable_reg_pp2_iter1;
reg    ap_enable_reg_pp2_iter2;
reg   [4:0] ap_phi_mux_ii_phi_fu_738_p4;
wire    ap_block_pp0_stage0;
reg   [2:0] iacc_reg_746;
wire   [0:0] icmp_ln48_fu_2969_p2;
wire    ap_CS_fsm_state6;
reg   [4:0] ap_phi_mux_ii_3_phi_fu_772_p4;
wire    ap_block_pp2_stage0;
reg   [2:0] ires_reg_790;
wire   [0:0] icmp_ln64_fu_3614_p2;
wire    ap_CS_fsm_state12;
wire   [63:0] trunc_ln42_cast_fu_2370_p1;
wire   [63:0] zext_ln42_fu_2381_p1;
wire   [63:0] zext_ln42_27_fu_2392_p1;
wire   [63:0] zext_ln42_28_fu_2403_p1;
reg   [15:0] mult_V_92_fu_240;
reg   [15:0] mult_V_93_fu_244;
reg   [15:0] mult_V_94_fu_248;
reg   [15:0] mult_V_95_fu_252;
reg   [15:0] mult_V_92_1_fu_256;
reg   [15:0] mult_V_93_1_fu_260;
reg   [15:0] mult_V_94_1_fu_264;
reg   [15:0] mult_V_95_1_fu_268;
reg   [15:0] mult_V_92_2_fu_272;
reg   [15:0] mult_V_93_2_fu_276;
reg   [15:0] mult_V_94_2_fu_280;
reg   [15:0] mult_V_95_2_fu_284;
reg   [15:0] mult_V_92_3_fu_288;
reg   [15:0] mult_V_93_3_fu_292;
reg   [15:0] mult_V_94_3_fu_296;
reg   [15:0] mult_V_95_3_fu_300;
reg   [15:0] mult_V_92_4_fu_304;
reg   [15:0] mult_V_93_4_fu_308;
reg   [15:0] mult_V_94_4_fu_312;
reg   [15:0] mult_V_95_4_fu_316;
reg   [15:0] mult_V_92_5_fu_320;
reg   [15:0] mult_V_93_5_fu_324;
reg   [15:0] mult_V_94_5_fu_328;
reg   [15:0] mult_V_95_5_fu_332;
reg   [15:0] mult_V_92_6_fu_336;
reg   [15:0] mult_V_93_6_fu_340;
reg   [15:0] mult_V_94_6_fu_344;
reg   [15:0] mult_V_95_6_fu_348;
reg   [15:0] mult_V_92_7_fu_352;
reg   [15:0] mult_V_93_7_fu_356;
reg   [15:0] mult_V_94_7_fu_360;
reg   [15:0] mult_V_95_7_fu_364;
reg   [15:0] mult_V_92_8_fu_368;
reg   [15:0] mult_V_93_8_fu_372;
reg   [15:0] mult_V_94_8_fu_376;
reg   [15:0] mult_V_95_8_fu_380;
reg   [15:0] mult_V_92_9_fu_384;
reg   [15:0] mult_V_93_9_fu_388;
reg   [15:0] mult_V_94_9_fu_392;
reg   [15:0] mult_V_95_9_fu_396;
reg   [15:0] mult_V_92_10_fu_400;
reg   [15:0] mult_V_93_10_fu_404;
reg   [15:0] mult_V_94_10_fu_408;
reg   [15:0] mult_V_95_10_fu_412;
reg   [15:0] mult_V_92_11_fu_416;
reg   [15:0] mult_V_93_11_fu_420;
reg   [15:0] mult_V_94_11_fu_424;
reg   [15:0] mult_V_95_11_fu_428;
reg   [15:0] mult_V_92_12_fu_432;
reg   [15:0] mult_V_93_12_fu_436;
reg   [15:0] mult_V_94_12_fu_440;
reg   [15:0] mult_V_95_12_fu_444;
reg   [15:0] mult_V_92_13_fu_448;
reg   [15:0] mult_V_93_13_fu_452;
reg   [15:0] mult_V_94_13_fu_456;
reg   [15:0] mult_V_95_13_fu_460;
reg   [15:0] mult_V_92_14_fu_464;
reg   [15:0] mult_V_93_14_fu_468;
reg   [15:0] mult_V_94_14_fu_472;
reg   [15:0] mult_V_95_14_fu_476;
reg   [15:0] mult_V_92_15_fu_480;
reg   [15:0] mult_V_93_15_fu_484;
reg   [15:0] mult_V_94_15_fu_488;
reg   [15:0] mult_V_95_15_fu_492;
reg   [15:0] mult_V_92_16_fu_496;
reg   [15:0] mult_V_93_16_fu_500;
reg   [15:0] mult_V_94_16_fu_504;
reg   [15:0] mult_V_95_16_fu_508;
reg   [15:0] mult_V_92_17_fu_512;
reg   [15:0] mult_V_93_17_fu_516;
reg   [15:0] mult_V_94_17_fu_520;
reg   [15:0] mult_V_95_17_fu_524;
reg   [15:0] mult_V_92_18_fu_528;
reg   [15:0] mult_V_93_18_fu_532;
reg   [15:0] mult_V_94_18_fu_536;
reg   [15:0] mult_V_95_18_fu_540;
reg   [15:0] mult_V_92_19_fu_544;
reg   [15:0] mult_V_93_19_fu_548;
reg   [15:0] mult_V_94_19_fu_552;
reg   [15:0] mult_V_95_19_fu_556;
reg   [15:0] mult_V_92_20_fu_560;
reg   [15:0] mult_V_93_20_fu_564;
reg   [15:0] mult_V_94_20_fu_568;
reg   [15:0] mult_V_95_20_fu_572;
reg   [15:0] mult_V_92_21_fu_576;
reg   [15:0] mult_V_93_21_fu_580;
reg   [15:0] mult_V_94_21_fu_584;
reg   [15:0] mult_V_95_21_fu_588;
reg   [15:0] mult_V_92_22_fu_592;
reg   [15:0] mult_V_93_22_fu_596;
reg   [15:0] mult_V_94_22_fu_600;
reg   [15:0] mult_V_95_22_fu_604;
reg   [15:0] mult_V_92_23_fu_608;
reg   [15:0] mult_V_93_23_fu_612;
reg   [15:0] mult_V_94_23_fu_616;
reg   [15:0] mult_V_95_23_fu_620;
reg   [15:0] acc_V_3_fu_624;
wire   [15:0] acc_V_0_fu_2979_p6;
wire   [1:0] trunc_ln49_fu_2975_p1;
reg   [15:0] acc_V_3_1_fu_628;
reg   [15:0] acc_V_3_2_fu_632;
reg   [15:0] acc_V_3_4_fu_636;
reg   [15:0] acc_V_3_5_fu_640;
wire   [15:0] acc_V_0_3_fu_3584_p2;
reg   [15:0] ap_sig_allocacmp_acc_V_3_5_load;
reg   [15:0] grp_load_fu_2074_p1;
reg   [15:0] acc_V_3_6_fu_644;
reg   [15:0] ap_sig_allocacmp_acc_V_3_6_load;
reg   [15:0] grp_load_fu_2077_p1;
reg   [15:0] acc_V_3_7_fu_648;
reg   [15:0] ap_sig_allocacmp_acc_V_3_7_load;
reg   [15:0] grp_load_fu_2080_p1;
reg   [15:0] acc_V_3_3_fu_652;
reg   [15:0] ap_sig_allocacmp_acc_V_3_3_load_1;
reg   [15:0] grp_load_fu_2083_p1;
reg   [15:0] res_pack_fu_656;
wire   [15:0] res_V_0_fu_3624_p6;
wire   [1:0] trunc_ln66_fu_3620_p1;
reg   [15:0] res_pack_29_fu_660;
reg   [15:0] res_pack_30_fu_664;
reg   [15:0] res_pack_31_fu_668;
wire  signed [15:0] grp_fu_822_p0;
wire  signed [15:0] grp_fu_868_p0;
wire  signed [15:0] grp_fu_882_p0;
wire  signed [15:0] grp_fu_894_p0;
wire   [6:0] shl_ln_fu_2362_p3;
wire   [6:0] or_ln41_fu_2375_p2;
wire   [6:0] or_ln41_7_fu_2386_p2;
wire   [6:0] or_ln41_8_fu_2397_p2;
wire   [25:0] grp_fu_868_p2;
wire   [25:0] grp_fu_822_p2;
wire   [25:0] grp_fu_894_p2;
wire   [25:0] grp_fu_882_p2;
wire   [1:0] acc_V_0_fu_2979_p5;
wire   [0:0] icmp_ln56_fu_3041_p2;
wire   [4:0] add_ln5422_fu_3055_p2;
wire   [2:0] select_ln54_fu_3047_p3;
wire   [6:0] tmp_s_fu_3386_p97;
wire   [1:0] res_V_0_fu_3624_p5;
reg   [8:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 9'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
end

myproject_dense_array_ap_fixed_24u_array_ap_fixed_16_6_5_3_0_4u_config26_s_w26_V #(
    .DataWidth( 12 ),
    .AddressRange( 96 ),
    .AddressWidth( 7 ))
w26_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w26_V_address0),
    .ce0(w26_V_ce0),
    .q0(w26_V_q0),
    .address1(w26_V_address1),
    .ce1(w26_V_ce1),
    .q1(w26_V_q1),
    .address2(w26_V_address2),
    .ce2(w26_V_ce2),
    .q2(w26_V_q2),
    .address3(w26_V_address3),
    .ce3(w26_V_ce3),
    .q3(w26_V_q3)
);

myproject_mul_16s_12s_26_2_0 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12s_26_2_0_U414(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_822_p0),
    .din1(w26_V_load_1_reg_4418),
    .ce(1'b1),
    .dout(grp_fu_822_p2)
);

myproject_mul_16s_12s_26_2_0 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12s_26_2_0_U415(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_868_p0),
    .din1(w26_V_load_reg_4413),
    .ce(1'b1),
    .dout(grp_fu_868_p2)
);

myproject_mul_16s_12s_26_2_0 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12s_26_2_0_U416(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_882_p0),
    .din1(w26_V_load_3_reg_4428),
    .ce(1'b1),
    .dout(grp_fu_882_p2)
);

myproject_mul_16s_12s_26_2_0 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 12 ),
    .dout_WIDTH( 26 ))
mul_16s_12s_26_2_0_U417(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_894_p0),
    .din1(w26_V_load_2_reg_4423),
    .ce(1'b1),
    .dout(grp_fu_894_p2)
);

myproject_mux_245_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 5 ),
    .dout_WIDTH( 16 ))
mux_245_16_1_1_U418(
    .din0(data_pack_reg_4259),
    .din1(data_pack_24_reg_4264),
    .din2(data_pack_25_reg_4269),
    .din3(data_pack_26_reg_4274),
    .din4(data_pack_27_reg_4279),
    .din5(data_pack_28_reg_4284),
    .din6(data_pack_29_reg_4289),
    .din7(data_pack_30_reg_4294),
    .din8(data_pack_31_reg_4299),
    .din9(data_pack_32_reg_4304),
    .din10(data_pack_33_reg_4309),
    .din11(data_pack_34_reg_4314),
    .din12(data_pack_35_reg_4319),
    .din13(data_pack_36_reg_4324),
    .din14(data_pack_37_reg_4329),
    .din15(data_pack_38_reg_4334),
    .din16(data_pack_39_reg_4339),
    .din17(data_pack_40_reg_4344),
    .din18(data_pack_41_reg_4349),
    .din19(data_pack_42_reg_4354),
    .din20(data_pack_43_reg_4359),
    .din21(data_pack_44_reg_4364),
    .din22(data_pack_45_reg_4369),
    .din23(data_pack_46_reg_4374),
    .din24(ap_phi_mux_ii_phi_fu_738_p4),
    .dout(a_V_fu_2332_p26)
);

myproject_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U419(
    .din0(16'd100),
    .din1(16'd65251),
    .din2(16'd95),
    .din3(16'd76),
    .din4(acc_V_0_fu_2979_p5),
    .dout(acc_V_0_fu_2979_p6)
);

myproject_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U420(
    .din0(grp_load_fu_2074_p1),
    .din1(grp_load_fu_2077_p1),
    .din2(grp_load_fu_2080_p1),
    .din3(grp_load_fu_2083_p1),
    .din4(trunc_ln57_reg_4559),
    .dout(tmp_fu_3367_p6)
);

myproject_mux_967_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 16 ),
    .din62_WIDTH( 16 ),
    .din63_WIDTH( 16 ),
    .din64_WIDTH( 16 ),
    .din65_WIDTH( 16 ),
    .din66_WIDTH( 16 ),
    .din67_WIDTH( 16 ),
    .din68_WIDTH( 16 ),
    .din69_WIDTH( 16 ),
    .din70_WIDTH( 16 ),
    .din71_WIDTH( 16 ),
    .din72_WIDTH( 16 ),
    .din73_WIDTH( 16 ),
    .din74_WIDTH( 16 ),
    .din75_WIDTH( 16 ),
    .din76_WIDTH( 16 ),
    .din77_WIDTH( 16 ),
    .din78_WIDTH( 16 ),
    .din79_WIDTH( 16 ),
    .din80_WIDTH( 16 ),
    .din81_WIDTH( 16 ),
    .din82_WIDTH( 16 ),
    .din83_WIDTH( 16 ),
    .din84_WIDTH( 16 ),
    .din85_WIDTH( 16 ),
    .din86_WIDTH( 16 ),
    .din87_WIDTH( 16 ),
    .din88_WIDTH( 16 ),
    .din89_WIDTH( 16 ),
    .din90_WIDTH( 16 ),
    .din91_WIDTH( 16 ),
    .din92_WIDTH( 16 ),
    .din93_WIDTH( 16 ),
    .din94_WIDTH( 16 ),
    .din95_WIDTH( 16 ),
    .din96_WIDTH( 7 ),
    .dout_WIDTH( 16 ))
mux_967_16_1_1_U421(
    .din0(mult_V_92_fu_240),
    .din1(mult_V_93_fu_244),
    .din2(mult_V_94_fu_248),
    .din3(mult_V_95_fu_252),
    .din4(mult_V_92_1_fu_256),
    .din5(mult_V_93_1_fu_260),
    .din6(mult_V_94_1_fu_264),
    .din7(mult_V_95_1_fu_268),
    .din8(mult_V_92_2_fu_272),
    .din9(mult_V_93_2_fu_276),
    .din10(mult_V_94_2_fu_280),
    .din11(mult_V_95_2_fu_284),
    .din12(mult_V_92_3_fu_288),
    .din13(mult_V_93_3_fu_292),
    .din14(mult_V_94_3_fu_296),
    .din15(mult_V_95_3_fu_300),
    .din16(mult_V_92_4_fu_304),
    .din17(mult_V_93_4_fu_308),
    .din18(mult_V_94_4_fu_312),
    .din19(mult_V_95_4_fu_316),
    .din20(mult_V_92_5_fu_320),
    .din21(mult_V_93_5_fu_324),
    .din22(mult_V_94_5_fu_328),
    .din23(mult_V_95_5_fu_332),
    .din24(mult_V_92_6_fu_336),
    .din25(mult_V_93_6_fu_340),
    .din26(mult_V_94_6_fu_344),
    .din27(mult_V_95_6_fu_348),
    .din28(mult_V_92_7_fu_352),
    .din29(mult_V_93_7_fu_356),
    .din30(mult_V_94_7_fu_360),
    .din31(mult_V_95_7_fu_364),
    .din32(mult_V_92_8_fu_368),
    .din33(mult_V_93_8_fu_372),
    .din34(mult_V_94_8_fu_376),
    .din35(mult_V_95_8_fu_380),
    .din36(mult_V_92_9_fu_384),
    .din37(mult_V_93_9_fu_388),
    .din38(mult_V_94_9_fu_392),
    .din39(mult_V_95_9_fu_396),
    .din40(mult_V_92_10_fu_400),
    .din41(mult_V_93_10_fu_404),
    .din42(mult_V_94_10_fu_408),
    .din43(mult_V_95_10_fu_412),
    .din44(mult_V_92_11_fu_416),
    .din45(mult_V_93_11_fu_420),
    .din46(mult_V_94_11_fu_424),
    .din47(mult_V_95_11_fu_428),
    .din48(mult_V_92_12_fu_432),
    .din49(mult_V_93_12_fu_436),
    .din50(mult_V_94_12_fu_440),
    .din51(mult_V_95_12_fu_444),
    .din52(mult_V_92_13_fu_448),
    .din53(mult_V_93_13_fu_452),
    .din54(mult_V_94_13_fu_456),
    .din55(mult_V_95_13_fu_460),
    .din56(mult_V_92_14_fu_464),
    .din57(mult_V_93_14_fu_468),
    .din58(mult_V_94_14_fu_472),
    .din59(mult_V_95_14_fu_476),
    .din60(mult_V_92_15_fu_480),
    .din61(mult_V_93_15_fu_484),
    .din62(mult_V_94_15_fu_488),
    .din63(mult_V_95_15_fu_492),
    .din64(mult_V_92_16_fu_496),
    .din65(mult_V_93_16_fu_500),
    .din66(mult_V_94_16_fu_504),
    .din67(mult_V_95_16_fu_508),
    .din68(mult_V_92_17_fu_512),
    .din69(mult_V_93_17_fu_516),
    .din70(mult_V_94_17_fu_520),
    .din71(mult_V_95_17_fu_524),
    .din72(mult_V_92_18_fu_528),
    .din73(mult_V_93_18_fu_532),
    .din74(mult_V_94_18_fu_536),
    .din75(mult_V_95_18_fu_540),
    .din76(mult_V_92_19_fu_544),
    .din77(mult_V_93_19_fu_548),
    .din78(mult_V_94_19_fu_552),
    .din79(mult_V_95_19_fu_556),
    .din80(mult_V_92_20_fu_560),
    .din81(mult_V_93_20_fu_564),
    .din82(mult_V_94_20_fu_568),
    .din83(mult_V_95_20_fu_572),
    .din84(mult_V_92_21_fu_576),
    .din85(mult_V_93_21_fu_580),
    .din86(mult_V_94_21_fu_584),
    .din87(mult_V_95_21_fu_588),
    .din88(mult_V_92_22_fu_592),
    .din89(mult_V_93_22_fu_596),
    .din90(mult_V_94_22_fu_600),
    .din91(mult_V_95_22_fu_604),
    .din92(mult_V_92_23_fu_608),
    .din93(mult_V_93_23_fu_612),
    .din94(mult_V_94_23_fu_616),
    .din95(mult_V_95_23_fu_620),
    .din96(tmp_s_fu_3386_p97),
    .dout(tmp_s_fu_3386_p98)
);

myproject_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U422(
    .din0(grp_load_fu_2074_p1),
    .din1(grp_load_fu_2077_p1),
    .din2(grp_load_fu_2080_p1),
    .din3(grp_load_fu_2083_p1),
    .din4(res_V_0_fu_3624_p5),
    .dout(res_V_0_fu_3624_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((layer26_out_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((layer25_out_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if ((~((layer25_out_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state9) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state9)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state9);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp2_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        acc_V_3_3_fu_652 <= acc_V_3_4_load_reg_4505;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1) & (trunc_ln57_reg_4559_pp2_iter1_reg == 2'd3))) begin
        acc_V_3_3_fu_652 <= acc_V_0_3_fu_3584_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        acc_V_3_5_fu_640 <= acc_V_3_load_reg_4490;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1) & (trunc_ln57_reg_4559_pp2_iter1_reg == 2'd0))) begin
        acc_V_3_5_fu_640 <= acc_V_0_3_fu_3584_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        acc_V_3_6_fu_644 <= acc_V_3_1_load_reg_4495;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1) & (trunc_ln57_reg_4559_pp2_iter1_reg == 2'd1))) begin
        acc_V_3_6_fu_644 <= acc_V_0_3_fu_3584_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        acc_V_3_7_fu_648 <= acc_V_3_2_load_reg_4500;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1) & (trunc_ln57_reg_4559_pp2_iter1_reg == 2'd2))) begin
        acc_V_3_7_fu_648 <= acc_V_0_3_fu_3584_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        iacc_reg_746 <= 3'd0;
    end else if (((icmp_ln48_fu_2969_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        iacc_reg_746 <= add_ln48_fu_2951_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ii_3_reg_768 <= 5'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln54_reg_4549 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ii_3_reg_768 <= select_ln54_5_reg_4553;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln37_reg_4384 == 1'd0))) begin
        ii_reg_734 <= add_ln37_reg_4379;
    end else if ((~((layer25_out_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        ii_reg_734 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        indvar_flatten_reg_757 <= 7'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln54_fu_3035_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        indvar_flatten_reg_757 <= add_ln54_fu_3029_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ires_reg_790 <= 3'd0;
    end else if (((icmp_ln64_fu_3614_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        ires_reg_790 <= add_ln64_fu_3608_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        jj_reg_779 <= 3'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln54_fu_3035_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        jj_reg_779 <= add_ln56_fu_3073_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln37_fu_2326_p2 == 1'd0))) begin
        a_V_reg_4388 <= a_V_fu_2332_p26;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_V_reg_4388_pp0_iter1_reg <= a_V_reg_4388;
        icmp_ln37_reg_4384 <= icmp_ln37_fu_2326_p2;
        ii_reg_734_pp0_iter1_reg <= ii_reg_734;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln49_fu_2975_p1 == 2'd1) & (icmp_ln48_fu_2969_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        acc_V_3_1_fu_628 <= acc_V_0_fu_2979_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        acc_V_3_1_load_reg_4495 <= acc_V_3_1_fu_628;
        acc_V_3_2_load_reg_4500 <= acc_V_3_2_fu_632;
        acc_V_3_4_load_reg_4505 <= acc_V_3_4_fu_636;
        acc_V_3_load_reg_4490 <= acc_V_3_fu_624;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln49_fu_2975_p1 == 2'd2) & (icmp_ln48_fu_2969_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        acc_V_3_2_fu_632 <= acc_V_0_fu_2979_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln49_fu_2975_p1 == 2'd3) & (icmp_ln48_fu_2969_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        acc_V_3_4_fu_636 <= acc_V_0_fu_2979_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln49_fu_2975_p1 == 2'd0) & (icmp_ln48_fu_2969_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        acc_V_3_fu_624 <= acc_V_0_fu_2979_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln37_reg_4379 <= add_ln37_fu_2320_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        data_pack_24_reg_4264 <= {{layer25_out_dout[31:16]}};
        data_pack_25_reg_4269 <= {{layer25_out_dout[47:32]}};
        data_pack_26_reg_4274 <= {{layer25_out_dout[63:48]}};
        data_pack_27_reg_4279 <= {{layer25_out_dout[79:64]}};
        data_pack_28_reg_4284 <= {{layer25_out_dout[95:80]}};
        data_pack_29_reg_4289 <= {{layer25_out_dout[111:96]}};
        data_pack_30_reg_4294 <= {{layer25_out_dout[127:112]}};
        data_pack_31_reg_4299 <= {{layer25_out_dout[143:128]}};
        data_pack_32_reg_4304 <= {{layer25_out_dout[159:144]}};
        data_pack_33_reg_4309 <= {{layer25_out_dout[175:160]}};
        data_pack_34_reg_4314 <= {{layer25_out_dout[191:176]}};
        data_pack_35_reg_4319 <= {{layer25_out_dout[207:192]}};
        data_pack_36_reg_4324 <= {{layer25_out_dout[223:208]}};
        data_pack_37_reg_4329 <= {{layer25_out_dout[239:224]}};
        data_pack_38_reg_4334 <= {{layer25_out_dout[255:240]}};
        data_pack_39_reg_4339 <= {{layer25_out_dout[271:256]}};
        data_pack_40_reg_4344 <= {{layer25_out_dout[287:272]}};
        data_pack_41_reg_4349 <= {{layer25_out_dout[303:288]}};
        data_pack_42_reg_4354 <= {{layer25_out_dout[319:304]}};
        data_pack_43_reg_4359 <= {{layer25_out_dout[335:320]}};
        data_pack_44_reg_4364 <= {{layer25_out_dout[351:336]}};
        data_pack_45_reg_4369 <= {{layer25_out_dout[367:352]}};
        data_pack_46_reg_4374 <= {{layer25_out_dout[383:368]}};
        data_pack_reg_4259 <= data_pack_fu_2086_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln54_reg_4549 <= icmp_ln54_fu_3035_p2;
        trunc_ln57_reg_4559_pp2_iter1_reg <= trunc_ln57_reg_4559;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ii_reg_734_pp0_iter2_reg <= ii_reg_734_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ii_reg_734_pp0_iter2_reg == 5'd10))) begin
        mult_V_92_10_fu_400 <= {{grp_fu_868_p2[25:10]}};
        mult_V_93_10_fu_404 <= {{grp_fu_822_p2[25:10]}};
        mult_V_94_10_fu_408 <= {{grp_fu_894_p2[25:10]}};
        mult_V_95_10_fu_412 <= {{grp_fu_882_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ii_reg_734_pp0_iter2_reg == 5'd11))) begin
        mult_V_92_11_fu_416 <= {{grp_fu_868_p2[25:10]}};
        mult_V_93_11_fu_420 <= {{grp_fu_822_p2[25:10]}};
        mult_V_94_11_fu_424 <= {{grp_fu_894_p2[25:10]}};
        mult_V_95_11_fu_428 <= {{grp_fu_882_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ii_reg_734_pp0_iter2_reg == 5'd12))) begin
        mult_V_92_12_fu_432 <= {{grp_fu_868_p2[25:10]}};
        mult_V_93_12_fu_436 <= {{grp_fu_822_p2[25:10]}};
        mult_V_94_12_fu_440 <= {{grp_fu_894_p2[25:10]}};
        mult_V_95_12_fu_444 <= {{grp_fu_882_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ii_reg_734_pp0_iter2_reg == 5'd13))) begin
        mult_V_92_13_fu_448 <= {{grp_fu_868_p2[25:10]}};
        mult_V_93_13_fu_452 <= {{grp_fu_822_p2[25:10]}};
        mult_V_94_13_fu_456 <= {{grp_fu_894_p2[25:10]}};
        mult_V_95_13_fu_460 <= {{grp_fu_882_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ii_reg_734_pp0_iter2_reg == 5'd14))) begin
        mult_V_92_14_fu_464 <= {{grp_fu_868_p2[25:10]}};
        mult_V_93_14_fu_468 <= {{grp_fu_822_p2[25:10]}};
        mult_V_94_14_fu_472 <= {{grp_fu_894_p2[25:10]}};
        mult_V_95_14_fu_476 <= {{grp_fu_882_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ii_reg_734_pp0_iter2_reg == 5'd15))) begin
        mult_V_92_15_fu_480 <= {{grp_fu_868_p2[25:10]}};
        mult_V_93_15_fu_484 <= {{grp_fu_822_p2[25:10]}};
        mult_V_94_15_fu_488 <= {{grp_fu_894_p2[25:10]}};
        mult_V_95_15_fu_492 <= {{grp_fu_882_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ii_reg_734_pp0_iter2_reg == 5'd16))) begin
        mult_V_92_16_fu_496 <= {{grp_fu_868_p2[25:10]}};
        mult_V_93_16_fu_500 <= {{grp_fu_822_p2[25:10]}};
        mult_V_94_16_fu_504 <= {{grp_fu_894_p2[25:10]}};
        mult_V_95_16_fu_508 <= {{grp_fu_882_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ii_reg_734_pp0_iter2_reg == 5'd17))) begin
        mult_V_92_17_fu_512 <= {{grp_fu_868_p2[25:10]}};
        mult_V_93_17_fu_516 <= {{grp_fu_822_p2[25:10]}};
        mult_V_94_17_fu_520 <= {{grp_fu_894_p2[25:10]}};
        mult_V_95_17_fu_524 <= {{grp_fu_882_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ii_reg_734_pp0_iter2_reg == 5'd18))) begin
        mult_V_92_18_fu_528 <= {{grp_fu_868_p2[25:10]}};
        mult_V_93_18_fu_532 <= {{grp_fu_822_p2[25:10]}};
        mult_V_94_18_fu_536 <= {{grp_fu_894_p2[25:10]}};
        mult_V_95_18_fu_540 <= {{grp_fu_882_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ii_reg_734_pp0_iter2_reg == 5'd19))) begin
        mult_V_92_19_fu_544 <= {{grp_fu_868_p2[25:10]}};
        mult_V_93_19_fu_548 <= {{grp_fu_822_p2[25:10]}};
        mult_V_94_19_fu_552 <= {{grp_fu_894_p2[25:10]}};
        mult_V_95_19_fu_556 <= {{grp_fu_882_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ii_reg_734_pp0_iter2_reg == 5'd1))) begin
        mult_V_92_1_fu_256 <= {{grp_fu_868_p2[25:10]}};
        mult_V_93_1_fu_260 <= {{grp_fu_822_p2[25:10]}};
        mult_V_94_1_fu_264 <= {{grp_fu_894_p2[25:10]}};
        mult_V_95_1_fu_268 <= {{grp_fu_882_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ii_reg_734_pp0_iter2_reg == 5'd20))) begin
        mult_V_92_20_fu_560 <= {{grp_fu_868_p2[25:10]}};
        mult_V_93_20_fu_564 <= {{grp_fu_822_p2[25:10]}};
        mult_V_94_20_fu_568 <= {{grp_fu_894_p2[25:10]}};
        mult_V_95_20_fu_572 <= {{grp_fu_882_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ii_reg_734_pp0_iter2_reg == 5'd21))) begin
        mult_V_92_21_fu_576 <= {{grp_fu_868_p2[25:10]}};
        mult_V_93_21_fu_580 <= {{grp_fu_822_p2[25:10]}};
        mult_V_94_21_fu_584 <= {{grp_fu_894_p2[25:10]}};
        mult_V_95_21_fu_588 <= {{grp_fu_882_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ii_reg_734_pp0_iter2_reg == 5'd22))) begin
        mult_V_92_22_fu_592 <= {{grp_fu_868_p2[25:10]}};
        mult_V_93_22_fu_596 <= {{grp_fu_822_p2[25:10]}};
        mult_V_94_22_fu_600 <= {{grp_fu_894_p2[25:10]}};
        mult_V_95_22_fu_604 <= {{grp_fu_882_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & ((ii_reg_734_pp0_iter2_reg == 5'd23) | ((ii_reg_734_pp0_iter2_reg == 5'd24) | ((ii_reg_734_pp0_iter2_reg == 5'd25) | ((ii_reg_734_pp0_iter2_reg == 5'd26) | ((ii_reg_734_pp0_iter2_reg == 5'd27) | ((ii_reg_734_pp0_iter2_reg == 5'd28) | ((ii_reg_734_pp0_iter2_reg == 5'd29) | ((ii_reg_734_pp0_iter2_reg == 5'd30) | (ii_reg_734_pp0_iter2_reg == 5'd31))))))))))) begin
        mult_V_92_23_fu_608 <= {{grp_fu_868_p2[25:10]}};
        mult_V_93_23_fu_612 <= {{grp_fu_822_p2[25:10]}};
        mult_V_94_23_fu_616 <= {{grp_fu_894_p2[25:10]}};
        mult_V_95_23_fu_620 <= {{grp_fu_882_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ii_reg_734_pp0_iter2_reg == 5'd2))) begin
        mult_V_92_2_fu_272 <= {{grp_fu_868_p2[25:10]}};
        mult_V_93_2_fu_276 <= {{grp_fu_822_p2[25:10]}};
        mult_V_94_2_fu_280 <= {{grp_fu_894_p2[25:10]}};
        mult_V_95_2_fu_284 <= {{grp_fu_882_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ii_reg_734_pp0_iter2_reg == 5'd3))) begin
        mult_V_92_3_fu_288 <= {{grp_fu_868_p2[25:10]}};
        mult_V_93_3_fu_292 <= {{grp_fu_822_p2[25:10]}};
        mult_V_94_3_fu_296 <= {{grp_fu_894_p2[25:10]}};
        mult_V_95_3_fu_300 <= {{grp_fu_882_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ii_reg_734_pp0_iter2_reg == 5'd4))) begin
        mult_V_92_4_fu_304 <= {{grp_fu_868_p2[25:10]}};
        mult_V_93_4_fu_308 <= {{grp_fu_822_p2[25:10]}};
        mult_V_94_4_fu_312 <= {{grp_fu_894_p2[25:10]}};
        mult_V_95_4_fu_316 <= {{grp_fu_882_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ii_reg_734_pp0_iter2_reg == 5'd5))) begin
        mult_V_92_5_fu_320 <= {{grp_fu_868_p2[25:10]}};
        mult_V_93_5_fu_324 <= {{grp_fu_822_p2[25:10]}};
        mult_V_94_5_fu_328 <= {{grp_fu_894_p2[25:10]}};
        mult_V_95_5_fu_332 <= {{grp_fu_882_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ii_reg_734_pp0_iter2_reg == 5'd6))) begin
        mult_V_92_6_fu_336 <= {{grp_fu_868_p2[25:10]}};
        mult_V_93_6_fu_340 <= {{grp_fu_822_p2[25:10]}};
        mult_V_94_6_fu_344 <= {{grp_fu_894_p2[25:10]}};
        mult_V_95_6_fu_348 <= {{grp_fu_882_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ii_reg_734_pp0_iter2_reg == 5'd7))) begin
        mult_V_92_7_fu_352 <= {{grp_fu_868_p2[25:10]}};
        mult_V_93_7_fu_356 <= {{grp_fu_822_p2[25:10]}};
        mult_V_94_7_fu_360 <= {{grp_fu_894_p2[25:10]}};
        mult_V_95_7_fu_364 <= {{grp_fu_882_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ii_reg_734_pp0_iter2_reg == 5'd8))) begin
        mult_V_92_8_fu_368 <= {{grp_fu_868_p2[25:10]}};
        mult_V_93_8_fu_372 <= {{grp_fu_822_p2[25:10]}};
        mult_V_94_8_fu_376 <= {{grp_fu_894_p2[25:10]}};
        mult_V_95_8_fu_380 <= {{grp_fu_882_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ii_reg_734_pp0_iter2_reg == 5'd9))) begin
        mult_V_92_9_fu_384 <= {{grp_fu_868_p2[25:10]}};
        mult_V_93_9_fu_388 <= {{grp_fu_822_p2[25:10]}};
        mult_V_94_9_fu_392 <= {{grp_fu_894_p2[25:10]}};
        mult_V_95_9_fu_396 <= {{grp_fu_882_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ii_reg_734_pp0_iter2_reg == 5'd0))) begin
        mult_V_92_fu_240 <= {{grp_fu_868_p2[25:10]}};
        mult_V_93_fu_244 <= {{grp_fu_822_p2[25:10]}};
        mult_V_94_fu_248 <= {{grp_fu_894_p2[25:10]}};
        mult_V_95_fu_252 <= {{grp_fu_882_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln66_fu_3620_p1 == 2'd1) & (icmp_ln64_fu_3614_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        res_pack_29_fu_660 <= res_V_0_fu_3624_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln66_fu_3620_p1 == 2'd2) & (icmp_ln64_fu_3614_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        res_pack_30_fu_664 <= res_V_0_fu_3624_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln66_fu_3620_p1 == 2'd3) & (icmp_ln64_fu_3614_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        res_pack_31_fu_668 <= res_V_0_fu_3624_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((trunc_ln66_fu_3620_p1 == 2'd0) & (icmp_ln64_fu_3614_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        res_pack_fu_656 <= res_V_0_fu_3624_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln54_fu_3035_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        select_ln54_5_reg_4553 <= select_ln54_5_fu_3061_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln54_reg_4549 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        tmp_reg_4570 <= tmp_fu_3367_p6;
        tmp_s_reg_4575 <= tmp_s_fu_3386_p98;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln54_fu_3035_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        trunc_ln57_reg_4559 <= trunc_ln57_fu_3069_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        w26_V_load_1_reg_4418 <= w26_V_q2;
        w26_V_load_2_reg_4423 <= w26_V_q1;
        w26_V_load_3_reg_4428 <= w26_V_q0;
        w26_V_load_reg_4413 <= w26_V_q3;
    end
end

always @ (*) begin
    if ((icmp_ln37_fu_2326_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln54_fu_3035_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state9 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state9 = 1'b0;
    end
end

always @ (*) begin
    if (((layer26_out_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (real_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln54_reg_4549 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_ii_3_phi_fu_772_p4 = select_ln54_5_reg_4553;
    end else begin
        ap_phi_mux_ii_3_phi_fu_772_p4 = ii_3_reg_768;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln37_reg_4384 == 1'd0))) begin
        ap_phi_mux_ii_phi_fu_738_p4 = add_ln37_reg_4379;
    end else begin
        ap_phi_mux_ii_phi_fu_738_p4 = ii_reg_734;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1) & (trunc_ln57_reg_4559_pp2_iter1_reg == 2'd3))) begin
        ap_sig_allocacmp_acc_V_3_3_load_1 = acc_V_0_3_fu_3584_p2;
    end else begin
        ap_sig_allocacmp_acc_V_3_3_load_1 = acc_V_3_3_fu_652;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1) & (trunc_ln57_reg_4559_pp2_iter1_reg == 2'd0))) begin
        ap_sig_allocacmp_acc_V_3_5_load = acc_V_0_3_fu_3584_p2;
    end else begin
        ap_sig_allocacmp_acc_V_3_5_load = acc_V_3_5_fu_640;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1) & (trunc_ln57_reg_4559_pp2_iter1_reg == 2'd1))) begin
        ap_sig_allocacmp_acc_V_3_6_load = acc_V_0_3_fu_3584_p2;
    end else begin
        ap_sig_allocacmp_acc_V_3_6_load = acc_V_3_6_fu_644;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1) & (trunc_ln57_reg_4559_pp2_iter1_reg == 2'd2))) begin
        ap_sig_allocacmp_acc_V_3_7_load = acc_V_0_3_fu_3584_p2;
    end else begin
        ap_sig_allocacmp_acc_V_3_7_load = acc_V_3_7_fu_648;
    end
end

always @ (*) begin
    if (((icmp_ln64_fu_3614_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        grp_load_fu_2074_p1 = acc_V_3_5_fu_640;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln54_reg_4549 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grp_load_fu_2074_p1 = ap_sig_allocacmp_acc_V_3_5_load;
    end else begin
        grp_load_fu_2074_p1 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln64_fu_3614_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        grp_load_fu_2077_p1 = acc_V_3_6_fu_644;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln54_reg_4549 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grp_load_fu_2077_p1 = ap_sig_allocacmp_acc_V_3_6_load;
    end else begin
        grp_load_fu_2077_p1 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln64_fu_3614_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        grp_load_fu_2080_p1 = acc_V_3_7_fu_648;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln54_reg_4549 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grp_load_fu_2080_p1 = ap_sig_allocacmp_acc_V_3_7_load;
    end else begin
        grp_load_fu_2080_p1 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln64_fu_3614_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        grp_load_fu_2083_p1 = acc_V_3_3_fu_652;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (icmp_ln54_reg_4549 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grp_load_fu_2083_p1 = ap_sig_allocacmp_acc_V_3_3_load_1;
    end else begin
        grp_load_fu_2083_p1 = 'bx;
    end
end

always @ (*) begin
    if (((layer26_out_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer25_out_blk_n = layer25_out_empty_n;
    end else begin
        layer25_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((layer25_out_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        layer25_out_read = 1'b1;
    end else begin
        layer25_out_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        layer26_out_blk_n = layer26_out_full_n;
    end else begin
        layer26_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((layer26_out_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        layer26_out_write = 1'b1;
    end else begin
        layer26_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        w26_V_ce0 = 1'b1;
    end else begin
        w26_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        w26_V_ce1 = 1'b1;
    end else begin
        w26_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        w26_V_ce2 = 1'b1;
    end else begin
        w26_V_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        w26_V_ce3 = 1'b1;
    end else begin
        w26_V_ce3 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((layer25_out_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln37_fu_2326_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln37_fu_2326_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((icmp_ln48_fu_2969_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (icmp_ln54_fu_3035_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter2 == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter2 == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b0)) | ((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (icmp_ln54_fu_3035_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((icmp_ln64_fu_3614_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((layer26_out_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_V_0_3_fu_3584_p2 = (tmp_s_reg_4575 + tmp_reg_4570);

assign acc_V_0_fu_2979_p5 = iacc_reg_746[1:0];

assign add_ln37_fu_2320_p2 = (ap_phi_mux_ii_phi_fu_738_p4 + 5'd1);

assign add_ln48_fu_2951_p2 = (iacc_reg_746 + 3'd1);

assign add_ln5422_fu_3055_p2 = (ap_phi_mux_ii_3_phi_fu_772_p4 + 5'd1);

assign add_ln54_fu_3029_p2 = (indvar_flatten_reg_757 + 7'd1);

assign add_ln56_fu_3073_p2 = (select_ln54_fu_3047_p3 + 3'd1);

assign add_ln64_fu_3608_p2 = (ires_reg_790 + 3'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((layer25_out_empty_n == 1'b0) | (ap_done_reg == 1'b1) | (real_start == 1'b0));
end

assign ap_block_state10_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign data_pack_fu_2086_p1 = layer25_out_dout[15:0];

assign grp_fu_822_p0 = sext_ln1118_152_fu_2412_p1;

assign grp_fu_868_p0 = sext_ln1118_152_fu_2412_p1;

assign grp_fu_882_p0 = sext_ln1118_152_fu_2412_p1;

assign grp_fu_894_p0 = sext_ln1118_152_fu_2412_p1;

assign icmp_ln37_fu_2326_p2 = ((ap_phi_mux_ii_phi_fu_738_p4 == 5'd24) ? 1'b1 : 1'b0);

assign icmp_ln48_fu_2969_p2 = ((iacc_reg_746 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln54_fu_3035_p2 = ((indvar_flatten_reg_757 == 7'd96) ? 1'b1 : 1'b0);

assign icmp_ln56_fu_3041_p2 = ((jj_reg_779 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln64_fu_3614_p2 = ((ires_reg_790 == 3'd4) ? 1'b1 : 1'b0);

assign layer26_out_din = {{{{res_pack_31_fu_668}, {res_pack_30_fu_664}}, {res_pack_29_fu_660}}, {res_pack_fu_656}};

assign or_ln41_7_fu_2386_p2 = (shl_ln_fu_2362_p3 | 7'd2);

assign or_ln41_8_fu_2397_p2 = (shl_ln_fu_2362_p3 | 7'd3);

assign or_ln41_fu_2375_p2 = (shl_ln_fu_2362_p3 | 7'd1);

assign res_V_0_fu_3624_p5 = ires_reg_790[1:0];

assign select_ln54_5_fu_3061_p3 = ((icmp_ln56_fu_3041_p2[0:0] == 1'b1) ? add_ln5422_fu_3055_p2 : ap_phi_mux_ii_3_phi_fu_772_p4);

assign select_ln54_fu_3047_p3 = ((icmp_ln56_fu_3041_p2[0:0] == 1'b1) ? 3'd0 : jj_reg_779);

assign sext_ln1118_152_fu_2412_p1 = $signed(a_V_reg_4388_pp0_iter1_reg);

assign shl_ln_fu_2362_p3 = {{ap_phi_mux_ii_phi_fu_738_p4}, {2'd0}};

assign start_out = real_start;

assign tmp_s_fu_3386_p97 = {{select_ln54_5_reg_4553}, {trunc_ln57_reg_4559}};

assign trunc_ln42_cast_fu_2370_p1 = shl_ln_fu_2362_p3;

assign trunc_ln49_fu_2975_p1 = iacc_reg_746[1:0];

assign trunc_ln57_fu_3069_p1 = select_ln54_fu_3047_p3[1:0];

assign trunc_ln66_fu_3620_p1 = ires_reg_790[1:0];

assign w26_V_address0 = zext_ln42_28_fu_2403_p1;

assign w26_V_address1 = zext_ln42_27_fu_2392_p1;

assign w26_V_address2 = zext_ln42_fu_2381_p1;

assign w26_V_address3 = trunc_ln42_cast_fu_2370_p1;

assign zext_ln42_27_fu_2392_p1 = or_ln41_7_fu_2386_p2;

assign zext_ln42_28_fu_2403_p1 = or_ln41_8_fu_2397_p2;

assign zext_ln42_fu_2381_p1 = or_ln41_fu_2375_p2;

endmodule //myproject_dense_array_ap_fixed_24u_array_ap_fixed_16_6_5_3_0_4u_config26_s
