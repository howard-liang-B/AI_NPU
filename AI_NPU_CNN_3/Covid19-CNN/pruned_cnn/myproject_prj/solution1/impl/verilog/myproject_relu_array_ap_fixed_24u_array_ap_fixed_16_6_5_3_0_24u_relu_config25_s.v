// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module myproject_relu_array_ap_fixed_24u_array_ap_fixed_16_6_5_3_0_24u_relu_config25_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        data_dout,
        data_empty_n,
        data_read,
        res_din,
        res_full_n,
        res_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [383:0] data_dout;
input   data_empty_n;
output   data_read;
output  [383:0] res_din;
input   res_full_n;
output   res_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg data_read;
reg res_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    data_blk_n;
reg    res_blk_n;
wire    ap_CS_fsm_state3;
wire   [15:0] tmp_66_fu_177_p1;
reg   [15:0] tmp_66_reg_1058;
wire   [14:0] trunc_ln155_fu_181_p1;
reg   [14:0] trunc_ln155_reg_1063;
reg   [15:0] tmp_67_reg_1068;
reg   [14:0] trunc_ln155_s_reg_1073;
reg   [15:0] tmp_68_reg_1078;
reg   [14:0] trunc_ln155_1_reg_1083;
reg   [15:0] tmp_69_reg_1088;
reg   [14:0] trunc_ln155_2_reg_1093;
reg   [15:0] tmp_70_reg_1098;
reg   [14:0] trunc_ln155_3_reg_1103;
reg   [15:0] tmp_71_reg_1108;
reg   [14:0] trunc_ln155_4_reg_1113;
reg   [15:0] tmp_72_reg_1118;
reg   [14:0] trunc_ln155_5_reg_1123;
reg   [15:0] tmp_73_reg_1128;
reg   [14:0] trunc_ln155_6_reg_1133;
reg   [15:0] tmp_74_reg_1138;
reg   [14:0] trunc_ln155_7_reg_1143;
reg   [15:0] tmp_75_reg_1148;
reg   [14:0] trunc_ln155_8_reg_1153;
reg   [15:0] tmp_76_reg_1158;
reg   [14:0] trunc_ln155_9_reg_1163;
reg   [15:0] tmp_77_reg_1168;
reg   [14:0] trunc_ln155_10_reg_1173;
reg   [15:0] tmp_78_reg_1178;
reg   [14:0] trunc_ln155_11_reg_1183;
reg   [15:0] tmp_79_reg_1188;
reg   [14:0] trunc_ln155_12_reg_1193;
reg   [15:0] tmp_80_reg_1198;
reg   [14:0] trunc_ln155_13_reg_1203;
reg   [15:0] tmp_81_reg_1208;
reg   [14:0] trunc_ln155_14_reg_1213;
reg   [15:0] tmp_82_reg_1218;
reg   [14:0] trunc_ln155_15_reg_1223;
reg   [15:0] tmp_83_reg_1228;
reg   [14:0] trunc_ln155_16_reg_1233;
reg   [15:0] tmp_84_reg_1238;
reg   [14:0] trunc_ln155_17_reg_1243;
reg   [15:0] tmp_85_reg_1248;
reg   [14:0] trunc_ln155_18_reg_1253;
reg   [15:0] tmp_86_reg_1258;
reg   [14:0] trunc_ln155_19_reg_1263;
reg   [15:0] tmp_87_reg_1268;
reg   [14:0] trunc_ln155_20_reg_1273;
reg   [15:0] tmp_88_reg_1278;
reg   [14:0] trunc_ln155_21_reg_1283;
reg   [15:0] tmp_89_reg_1288;
reg   [14:0] trunc_ln155_22_reg_1293;
wire   [14:0] out_data_25_fu_650_p3;
reg   [14:0] out_data_25_reg_1298;
wire    ap_CS_fsm_state2;
wire   [14:0] out_data_27_fu_662_p3;
reg   [14:0] out_data_27_reg_1303;
wire   [14:0] out_data_29_fu_674_p3;
reg   [14:0] out_data_29_reg_1308;
wire   [14:0] out_data_31_fu_686_p3;
reg   [14:0] out_data_31_reg_1313;
wire   [14:0] out_data_33_fu_698_p3;
reg   [14:0] out_data_33_reg_1318;
wire   [14:0] out_data_35_fu_710_p3;
reg   [14:0] out_data_35_reg_1323;
wire   [14:0] out_data_37_fu_722_p3;
reg   [14:0] out_data_37_reg_1328;
wire   [14:0] out_data_39_fu_734_p3;
reg   [14:0] out_data_39_reg_1333;
wire   [14:0] out_data_41_fu_746_p3;
reg   [14:0] out_data_41_reg_1338;
wire   [14:0] out_data_43_fu_758_p3;
reg   [14:0] out_data_43_reg_1343;
wire   [14:0] out_data_45_fu_770_p3;
reg   [14:0] out_data_45_reg_1348;
wire   [14:0] out_data_47_fu_782_p3;
reg   [14:0] out_data_47_reg_1353;
wire   [14:0] out_data_49_fu_794_p3;
reg   [14:0] out_data_49_reg_1358;
wire   [14:0] out_data_51_fu_806_p3;
reg   [14:0] out_data_51_reg_1363;
wire   [14:0] out_data_53_fu_818_p3;
reg   [14:0] out_data_53_reg_1368;
wire   [14:0] out_data_55_fu_830_p3;
reg   [14:0] out_data_55_reg_1373;
wire   [14:0] out_data_57_fu_842_p3;
reg   [14:0] out_data_57_reg_1378;
wire   [14:0] out_data_59_fu_854_p3;
reg   [14:0] out_data_59_reg_1383;
wire   [14:0] out_data_61_fu_866_p3;
reg   [14:0] out_data_61_reg_1388;
wire   [14:0] out_data_63_fu_878_p3;
reg   [14:0] out_data_63_reg_1393;
wire   [14:0] out_data_65_fu_890_p3;
reg   [14:0] out_data_65_reg_1398;
wire   [14:0] out_data_67_fu_902_p3;
reg   [14:0] out_data_67_reg_1403;
wire   [14:0] out_data_69_fu_914_p3;
reg   [14:0] out_data_69_reg_1408;
wire   [14:0] out_data_71_fu_926_p3;
reg   [14:0] out_data_71_reg_1413;
reg    ap_block_state1;
wire   [0:0] icmp_ln1494_fu_645_p2;
wire   [0:0] icmp_ln1494_11_fu_657_p2;
wire   [0:0] icmp_ln1494_12_fu_669_p2;
wire   [0:0] icmp_ln1494_13_fu_681_p2;
wire   [0:0] icmp_ln1494_14_fu_693_p2;
wire   [0:0] icmp_ln1494_15_fu_705_p2;
wire   [0:0] icmp_ln1494_16_fu_717_p2;
wire   [0:0] icmp_ln1494_17_fu_729_p2;
wire   [0:0] icmp_ln1494_18_fu_741_p2;
wire   [0:0] icmp_ln1494_19_fu_753_p2;
wire   [0:0] icmp_ln1494_20_fu_765_p2;
wire   [0:0] icmp_ln1494_21_fu_777_p2;
wire   [0:0] icmp_ln1494_22_fu_789_p2;
wire   [0:0] icmp_ln1494_23_fu_801_p2;
wire   [0:0] icmp_ln1494_24_fu_813_p2;
wire   [0:0] icmp_ln1494_25_fu_825_p2;
wire   [0:0] icmp_ln1494_26_fu_837_p2;
wire   [0:0] icmp_ln1494_27_fu_849_p2;
wire   [0:0] icmp_ln1494_28_fu_861_p2;
wire   [0:0] icmp_ln1494_29_fu_873_p2;
wire   [0:0] icmp_ln1494_30_fu_885_p2;
wire   [0:0] icmp_ln1494_31_fu_897_p2;
wire   [0:0] icmp_ln1494_32_fu_909_p2;
wire   [0:0] icmp_ln1494_33_fu_921_p2;
wire   [15:0] zext_ln45_28_fu_999_p1;
wire   [15:0] zext_ln45_27_fu_996_p1;
wire   [15:0] zext_ln45_26_fu_993_p1;
wire   [15:0] zext_ln45_25_fu_990_p1;
wire   [15:0] zext_ln45_24_fu_987_p1;
wire   [15:0] zext_ln45_23_fu_984_p1;
wire   [15:0] zext_ln45_22_fu_981_p1;
wire   [15:0] zext_ln45_21_fu_978_p1;
wire   [15:0] zext_ln45_20_fu_975_p1;
wire   [15:0] zext_ln45_19_fu_972_p1;
wire   [15:0] zext_ln45_18_fu_969_p1;
wire   [15:0] zext_ln45_17_fu_966_p1;
wire   [15:0] zext_ln45_16_fu_963_p1;
wire   [15:0] zext_ln45_15_fu_960_p1;
wire   [15:0] zext_ln45_14_fu_957_p1;
wire   [15:0] zext_ln45_13_fu_954_p1;
wire   [15:0] zext_ln45_12_fu_951_p1;
wire   [15:0] zext_ln45_11_fu_948_p1;
wire   [15:0] zext_ln45_10_fu_945_p1;
wire   [15:0] zext_ln45_9_fu_942_p1;
wire   [15:0] zext_ln45_8_fu_939_p1;
wire   [15:0] zext_ln45_7_fu_936_p1;
wire   [15:0] zext_ln45_fu_933_p1;
wire   [382:0] tmp_fu_1002_p25;
reg   [2:0] ap_NS_fsm;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((res_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        out_data_25_reg_1298 <= out_data_25_fu_650_p3;
        out_data_27_reg_1303 <= out_data_27_fu_662_p3;
        out_data_29_reg_1308 <= out_data_29_fu_674_p3;
        out_data_31_reg_1313 <= out_data_31_fu_686_p3;
        out_data_33_reg_1318 <= out_data_33_fu_698_p3;
        out_data_35_reg_1323 <= out_data_35_fu_710_p3;
        out_data_37_reg_1328 <= out_data_37_fu_722_p3;
        out_data_39_reg_1333 <= out_data_39_fu_734_p3;
        out_data_41_reg_1338 <= out_data_41_fu_746_p3;
        out_data_43_reg_1343 <= out_data_43_fu_758_p3;
        out_data_45_reg_1348 <= out_data_45_fu_770_p3;
        out_data_47_reg_1353 <= out_data_47_fu_782_p3;
        out_data_49_reg_1358 <= out_data_49_fu_794_p3;
        out_data_51_reg_1363 <= out_data_51_fu_806_p3;
        out_data_53_reg_1368 <= out_data_53_fu_818_p3;
        out_data_55_reg_1373 <= out_data_55_fu_830_p3;
        out_data_57_reg_1378 <= out_data_57_fu_842_p3;
        out_data_59_reg_1383 <= out_data_59_fu_854_p3;
        out_data_61_reg_1388 <= out_data_61_fu_866_p3;
        out_data_63_reg_1393 <= out_data_63_fu_878_p3;
        out_data_65_reg_1398 <= out_data_65_fu_890_p3;
        out_data_67_reg_1403 <= out_data_67_fu_902_p3;
        out_data_69_reg_1408 <= out_data_69_fu_914_p3;
        out_data_71_reg_1413 <= out_data_71_fu_926_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        tmp_66_reg_1058 <= tmp_66_fu_177_p1;
        tmp_67_reg_1068 <= {{data_dout[31:16]}};
        tmp_68_reg_1078 <= {{data_dout[47:32]}};
        tmp_69_reg_1088 <= {{data_dout[63:48]}};
        tmp_70_reg_1098 <= {{data_dout[79:64]}};
        tmp_71_reg_1108 <= {{data_dout[95:80]}};
        tmp_72_reg_1118 <= {{data_dout[111:96]}};
        tmp_73_reg_1128 <= {{data_dout[127:112]}};
        tmp_74_reg_1138 <= {{data_dout[143:128]}};
        tmp_75_reg_1148 <= {{data_dout[159:144]}};
        tmp_76_reg_1158 <= {{data_dout[175:160]}};
        tmp_77_reg_1168 <= {{data_dout[191:176]}};
        tmp_78_reg_1178 <= {{data_dout[207:192]}};
        tmp_79_reg_1188 <= {{data_dout[223:208]}};
        tmp_80_reg_1198 <= {{data_dout[239:224]}};
        tmp_81_reg_1208 <= {{data_dout[255:240]}};
        tmp_82_reg_1218 <= {{data_dout[271:256]}};
        tmp_83_reg_1228 <= {{data_dout[287:272]}};
        tmp_84_reg_1238 <= {{data_dout[303:288]}};
        tmp_85_reg_1248 <= {{data_dout[319:304]}};
        tmp_86_reg_1258 <= {{data_dout[335:320]}};
        tmp_87_reg_1268 <= {{data_dout[351:336]}};
        tmp_88_reg_1278 <= {{data_dout[367:352]}};
        tmp_89_reg_1288 <= {{data_dout[383:368]}};
        trunc_ln155_10_reg_1173 <= {{data_dout[190:176]}};
        trunc_ln155_11_reg_1183 <= {{data_dout[206:192]}};
        trunc_ln155_12_reg_1193 <= {{data_dout[222:208]}};
        trunc_ln155_13_reg_1203 <= {{data_dout[238:224]}};
        trunc_ln155_14_reg_1213 <= {{data_dout[254:240]}};
        trunc_ln155_15_reg_1223 <= {{data_dout[270:256]}};
        trunc_ln155_16_reg_1233 <= {{data_dout[286:272]}};
        trunc_ln155_17_reg_1243 <= {{data_dout[302:288]}};
        trunc_ln155_18_reg_1253 <= {{data_dout[318:304]}};
        trunc_ln155_19_reg_1263 <= {{data_dout[334:320]}};
        trunc_ln155_1_reg_1083 <= {{data_dout[46:32]}};
        trunc_ln155_20_reg_1273 <= {{data_dout[350:336]}};
        trunc_ln155_21_reg_1283 <= {{data_dout[366:352]}};
        trunc_ln155_22_reg_1293 <= {{data_dout[382:368]}};
        trunc_ln155_2_reg_1093 <= {{data_dout[62:48]}};
        trunc_ln155_3_reg_1103 <= {{data_dout[78:64]}};
        trunc_ln155_4_reg_1113 <= {{data_dout[94:80]}};
        trunc_ln155_5_reg_1123 <= {{data_dout[110:96]}};
        trunc_ln155_6_reg_1133 <= {{data_dout[126:112]}};
        trunc_ln155_7_reg_1143 <= {{data_dout[142:128]}};
        trunc_ln155_8_reg_1153 <= {{data_dout[158:144]}};
        trunc_ln155_9_reg_1163 <= {{data_dout[174:160]}};
        trunc_ln155_reg_1063 <= trunc_ln155_fu_181_p1;
        trunc_ln155_s_reg_1073 <= {{data_dout[30:16]}};
    end
end

always @ (*) begin
    if (((res_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_blk_n = data_empty_n;
    end else begin
        data_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (data_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        data_read = 1'b1;
    end else begin
        data_read = 1'b0;
    end
end

always @ (*) begin
    if (((res_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        res_blk_n = res_full_n;
    end else begin
        res_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((res_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        res_write = 1'b1;
    end else begin
        res_write = 1'b0;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (data_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((res_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (data_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_ready = internal_ap_ready;

assign icmp_ln1494_11_fu_657_p2 = (($signed(tmp_67_reg_1068) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_12_fu_669_p2 = (($signed(tmp_68_reg_1078) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_13_fu_681_p2 = (($signed(tmp_69_reg_1088) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_14_fu_693_p2 = (($signed(tmp_70_reg_1098) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_15_fu_705_p2 = (($signed(tmp_71_reg_1108) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_16_fu_717_p2 = (($signed(tmp_72_reg_1118) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_17_fu_729_p2 = (($signed(tmp_73_reg_1128) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_18_fu_741_p2 = (($signed(tmp_74_reg_1138) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_19_fu_753_p2 = (($signed(tmp_75_reg_1148) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_20_fu_765_p2 = (($signed(tmp_76_reg_1158) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_21_fu_777_p2 = (($signed(tmp_77_reg_1168) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_22_fu_789_p2 = (($signed(tmp_78_reg_1178) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_23_fu_801_p2 = (($signed(tmp_79_reg_1188) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_24_fu_813_p2 = (($signed(tmp_80_reg_1198) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_25_fu_825_p2 = (($signed(tmp_81_reg_1208) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_26_fu_837_p2 = (($signed(tmp_82_reg_1218) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_27_fu_849_p2 = (($signed(tmp_83_reg_1228) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_28_fu_861_p2 = (($signed(tmp_84_reg_1238) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_29_fu_873_p2 = (($signed(tmp_85_reg_1248) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_30_fu_885_p2 = (($signed(tmp_86_reg_1258) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_31_fu_897_p2 = (($signed(tmp_87_reg_1268) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_32_fu_909_p2 = (($signed(tmp_88_reg_1278) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_33_fu_921_p2 = (($signed(tmp_89_reg_1288) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1494_fu_645_p2 = (($signed(tmp_66_reg_1058) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign out_data_25_fu_650_p3 = ((icmp_ln1494_fu_645_p2[0:0] == 1'b1) ? trunc_ln155_reg_1063 : 15'd0);

assign out_data_27_fu_662_p3 = ((icmp_ln1494_11_fu_657_p2[0:0] == 1'b1) ? trunc_ln155_s_reg_1073 : 15'd0);

assign out_data_29_fu_674_p3 = ((icmp_ln1494_12_fu_669_p2[0:0] == 1'b1) ? trunc_ln155_1_reg_1083 : 15'd0);

assign out_data_31_fu_686_p3 = ((icmp_ln1494_13_fu_681_p2[0:0] == 1'b1) ? trunc_ln155_2_reg_1093 : 15'd0);

assign out_data_33_fu_698_p3 = ((icmp_ln1494_14_fu_693_p2[0:0] == 1'b1) ? trunc_ln155_3_reg_1103 : 15'd0);

assign out_data_35_fu_710_p3 = ((icmp_ln1494_15_fu_705_p2[0:0] == 1'b1) ? trunc_ln155_4_reg_1113 : 15'd0);

assign out_data_37_fu_722_p3 = ((icmp_ln1494_16_fu_717_p2[0:0] == 1'b1) ? trunc_ln155_5_reg_1123 : 15'd0);

assign out_data_39_fu_734_p3 = ((icmp_ln1494_17_fu_729_p2[0:0] == 1'b1) ? trunc_ln155_6_reg_1133 : 15'd0);

assign out_data_41_fu_746_p3 = ((icmp_ln1494_18_fu_741_p2[0:0] == 1'b1) ? trunc_ln155_7_reg_1143 : 15'd0);

assign out_data_43_fu_758_p3 = ((icmp_ln1494_19_fu_753_p2[0:0] == 1'b1) ? trunc_ln155_8_reg_1153 : 15'd0);

assign out_data_45_fu_770_p3 = ((icmp_ln1494_20_fu_765_p2[0:0] == 1'b1) ? trunc_ln155_9_reg_1163 : 15'd0);

assign out_data_47_fu_782_p3 = ((icmp_ln1494_21_fu_777_p2[0:0] == 1'b1) ? trunc_ln155_10_reg_1173 : 15'd0);

assign out_data_49_fu_794_p3 = ((icmp_ln1494_22_fu_789_p2[0:0] == 1'b1) ? trunc_ln155_11_reg_1183 : 15'd0);

assign out_data_51_fu_806_p3 = ((icmp_ln1494_23_fu_801_p2[0:0] == 1'b1) ? trunc_ln155_12_reg_1193 : 15'd0);

assign out_data_53_fu_818_p3 = ((icmp_ln1494_24_fu_813_p2[0:0] == 1'b1) ? trunc_ln155_13_reg_1203 : 15'd0);

assign out_data_55_fu_830_p3 = ((icmp_ln1494_25_fu_825_p2[0:0] == 1'b1) ? trunc_ln155_14_reg_1213 : 15'd0);

assign out_data_57_fu_842_p3 = ((icmp_ln1494_26_fu_837_p2[0:0] == 1'b1) ? trunc_ln155_15_reg_1223 : 15'd0);

assign out_data_59_fu_854_p3 = ((icmp_ln1494_27_fu_849_p2[0:0] == 1'b1) ? trunc_ln155_16_reg_1233 : 15'd0);

assign out_data_61_fu_866_p3 = ((icmp_ln1494_28_fu_861_p2[0:0] == 1'b1) ? trunc_ln155_17_reg_1243 : 15'd0);

assign out_data_63_fu_878_p3 = ((icmp_ln1494_29_fu_873_p2[0:0] == 1'b1) ? trunc_ln155_18_reg_1253 : 15'd0);

assign out_data_65_fu_890_p3 = ((icmp_ln1494_30_fu_885_p2[0:0] == 1'b1) ? trunc_ln155_19_reg_1263 : 15'd0);

assign out_data_67_fu_902_p3 = ((icmp_ln1494_31_fu_897_p2[0:0] == 1'b1) ? trunc_ln155_20_reg_1273 : 15'd0);

assign out_data_69_fu_914_p3 = ((icmp_ln1494_32_fu_909_p2[0:0] == 1'b1) ? trunc_ln155_21_reg_1283 : 15'd0);

assign out_data_71_fu_926_p3 = ((icmp_ln1494_33_fu_921_p2[0:0] == 1'b1) ? trunc_ln155_22_reg_1293 : 15'd0);

assign res_din = tmp_fu_1002_p25;

assign start_out = real_start;

assign tmp_66_fu_177_p1 = data_dout[15:0];

assign tmp_fu_1002_p25 = {{{{{{{{{{{{{{{{{{{{{{{{out_data_71_reg_1413}, {zext_ln45_28_fu_999_p1}}, {zext_ln45_27_fu_996_p1}}, {zext_ln45_26_fu_993_p1}}, {zext_ln45_25_fu_990_p1}}, {zext_ln45_24_fu_987_p1}}, {zext_ln45_23_fu_984_p1}}, {zext_ln45_22_fu_981_p1}}, {zext_ln45_21_fu_978_p1}}, {zext_ln45_20_fu_975_p1}}, {zext_ln45_19_fu_972_p1}}, {zext_ln45_18_fu_969_p1}}, {zext_ln45_17_fu_966_p1}}, {zext_ln45_16_fu_963_p1}}, {zext_ln45_15_fu_960_p1}}, {zext_ln45_14_fu_957_p1}}, {zext_ln45_13_fu_954_p1}}, {zext_ln45_12_fu_951_p1}}, {zext_ln45_11_fu_948_p1}}, {zext_ln45_10_fu_945_p1}}, {zext_ln45_9_fu_942_p1}}, {zext_ln45_8_fu_939_p1}}, {zext_ln45_7_fu_936_p1}}, {zext_ln45_fu_933_p1}};

assign trunc_ln155_fu_181_p1 = data_dout[14:0];

assign zext_ln45_10_fu_945_p1 = out_data_33_reg_1318;

assign zext_ln45_11_fu_948_p1 = out_data_35_reg_1323;

assign zext_ln45_12_fu_951_p1 = out_data_37_reg_1328;

assign zext_ln45_13_fu_954_p1 = out_data_39_reg_1333;

assign zext_ln45_14_fu_957_p1 = out_data_41_reg_1338;

assign zext_ln45_15_fu_960_p1 = out_data_43_reg_1343;

assign zext_ln45_16_fu_963_p1 = out_data_45_reg_1348;

assign zext_ln45_17_fu_966_p1 = out_data_47_reg_1353;

assign zext_ln45_18_fu_969_p1 = out_data_49_reg_1358;

assign zext_ln45_19_fu_972_p1 = out_data_51_reg_1363;

assign zext_ln45_20_fu_975_p1 = out_data_53_reg_1368;

assign zext_ln45_21_fu_978_p1 = out_data_55_reg_1373;

assign zext_ln45_22_fu_981_p1 = out_data_57_reg_1378;

assign zext_ln45_23_fu_984_p1 = out_data_59_reg_1383;

assign zext_ln45_24_fu_987_p1 = out_data_61_reg_1388;

assign zext_ln45_25_fu_990_p1 = out_data_63_reg_1393;

assign zext_ln45_26_fu_993_p1 = out_data_65_reg_1398;

assign zext_ln45_27_fu_996_p1 = out_data_67_reg_1403;

assign zext_ln45_28_fu_999_p1 = out_data_69_reg_1408;

assign zext_ln45_7_fu_936_p1 = out_data_27_reg_1303;

assign zext_ln45_8_fu_939_p1 = out_data_29_reg_1308;

assign zext_ln45_9_fu_942_p1 = out_data_31_reg_1313;

assign zext_ln45_fu_933_p1 = out_data_25_reg_1298;

endmodule //myproject_relu_array_ap_fixed_24u_array_ap_fixed_16_6_5_3_0_24u_relu_config25_s
