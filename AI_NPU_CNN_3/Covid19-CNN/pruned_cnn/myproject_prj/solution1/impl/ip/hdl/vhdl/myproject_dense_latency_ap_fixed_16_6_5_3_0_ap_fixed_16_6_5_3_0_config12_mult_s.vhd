-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config12_mult_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    kernel_data_V_5_0 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_5_2 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_5_3 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_5_4 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_5_5 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_5_6 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_5_7 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_5_8 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_5_9 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_5_10 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_5_11 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_5_12 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_5_14 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_5_15 : IN STD_LOGIC_VECTOR (15 downto 0);
    kernel_data_V_5_16 : IN STD_LOGIC_VECTOR (15 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of myproject_dense_latency_ap_fixed_16_6_5_3_0_ap_fixed_16_6_5_3_0_config12_mult_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv24_FFFF91 : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111110010001";
    constant ap_const_lv25_E4 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000011100100";
    constant ap_const_lv25_CA : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000011001010";
    constant ap_const_lv26_3FFFD9E : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110110011110";
    constant ap_const_lv25_1FFFF4D : STD_LOGIC_VECTOR (24 downto 0) := "1111111111111111101001101";
    constant ap_const_lv25_92 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000010010010";
    constant ap_const_lv26_3FFFED7 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111111011010111";
    constant ap_const_lv26_3FFFD90 : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110110010000";
    constant ap_const_lv26_3FFFD6C : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111110101101100";
    constant ap_const_lv25_CB : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000011001011";
    constant ap_const_lv25_F5 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000011110101";
    constant ap_const_lv25_C4 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000011000100";
    constant ap_const_lv24_FFFF99 : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111110011001";
    constant ap_const_lv26_207 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000001000000111";
    constant ap_const_lv24_6E : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000001101110";
    constant ap_const_lv26_186 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000110000110";
    constant ap_const_lv26_196 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000110010110";
    constant ap_const_lv26_149 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000101001001";
    constant ap_const_lv26_3FFFECE : STD_LOGIC_VECTOR (25 downto 0) := "11111111111111111011001110";
    constant ap_const_lv25_DE : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000011011110";
    constant ap_const_lv26_1BE : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000110111110";
    constant ap_const_lv25_1FFFF50 : STD_LOGIC_VECTOR (24 downto 0) := "1111111111111111101010000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv21_0 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv10_2F9 : STD_LOGIC_VECTOR (9 downto 0) := "1011111001";
    constant ap_const_lv16_23 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100011";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";

attribute shreg_extract : string;
    signal sext_ln1118_118_fu_2150_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal trunc_ln708_142_reg_2947 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1118_117_fu_2249_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln708_150_reg_2978 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln708_150_reg_2978_pp0_iter2_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln708_151_reg_2983 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln708_154_reg_2993 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln708_154_reg_2993_pp0_iter2_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln708_131_reg_3008 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln708_133_reg_3018 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln708_135_reg_3023 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_136_reg_3028 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln708_143_reg_3058 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_144_reg_3063 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_145_reg_3068 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_146_reg_3073 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_147_reg_3078 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln708_148_reg_3083 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln708_149_reg_3088 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln708_57_fu_2556_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal trunc_ln708_155_reg_3099 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_142_fu_2572_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_142_reg_3104 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_155_fu_2578_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_155_reg_3109 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln_reg_3114 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln708_s_reg_3119 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_132_reg_3124 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_134_reg_3129 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_137_reg_3134 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln708_138_reg_3139 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln708_139_reg_3144 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_140_reg_3149 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln708_141_reg_3154 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_152_reg_3159 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_153_reg_3164 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_135_fu_2761_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_135_reg_3169 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_138_fu_2767_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln703_138_reg_3174 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln703_139_fu_2773_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln703_139_reg_3179 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln703_143_fu_2788_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln703_143_reg_3184 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln703_149_fu_2794_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_149_reg_3189 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_152_fu_2798_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_152_reg_3194 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_156_fu_2809_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_156_reg_3199 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_133_fu_2832_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_133_reg_3204 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_136_fu_2843_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_136_reg_3209 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_144_fu_2863_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_144_reg_3214 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_147_fu_2873_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_147_reg_3219 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_150_fu_2882_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_150_reg_3224 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_157_fu_2891_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_157_reg_3229 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_148_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal grp_fu_149_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_151_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_151_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_152_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_152_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_153_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_153_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_154_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_154_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_155_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_156_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_158_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_159_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_160_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_160_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_161_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_162_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_163_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_164_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_165_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_166_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_167_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_168_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_168_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_170_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_171_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_172_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln1118_112_fu_2179_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1118_26_fu_2183_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1118_26_fu_2183_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1118_113_fu_2191_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sub_ln1118_14_fu_2195_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln1118_112_fu_2179_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sub_ln1118_15_fu_2201_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_fu_151_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_153_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal shl_ln1118_27_fu_2284_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1118_27_fu_2284_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal shl_ln1118_28_fu_2296_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1118_28_fu_2296_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1118_120_fu_2292_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1118_121_fu_2304_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sub_ln1118_16_fu_2308_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln1118_23_fu_2342_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1118_23_fu_2342_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal shl_ln1118_24_fu_2354_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1118_24_fu_2354_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln1118_101_fu_2350_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln1118_102_fu_2362_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln1118_fu_2366_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln1118_25_fu_2391_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1118_25_fu_2391_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln1118_103_fu_2399_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sub_ln1118_13_fu_2403_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_164_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_149_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_155_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_162_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_158_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_148_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_159_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_154_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_160_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_167_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln1118_124_fu_2476_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln708_56_fu_2549_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln_fu_2588_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln1118_s_fu_2600_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1118_fu_2596_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1118_99_fu_2608_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sub_ln1118_fu_2612_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_163_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_171_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_156_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_170_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_172_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_166_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_161_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal grp_fu_165_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_168_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_152_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln708_53_fu_2729_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln708_55_fu_2735_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_123_fu_2664_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln708_51_fu_2720_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_125_fu_2723_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_122_fu_2638_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_126_fu_2758_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln708_45_fu_2651_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln703_fu_2785_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln703_141_fu_2779_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln708_46_fu_2667_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln708_52_fu_2726_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln708_54_fu_2732_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_154_fu_2803_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln708_fu_2814_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln708_47_fu_2817_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_fu_2826_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln708_48_fu_2820_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln708_49_fu_2823_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_134_fu_2837_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_17_fu_2851_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_fu_2848_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_18_fu_2860_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_140_fu_2854_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_146_fu_2869_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_148_fu_2878_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_153_fu_2887_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_137_fu_2896_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_151_fu_2905_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_145_fu_2900_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_158_fu_2909_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_148_ce : STD_LOGIC;
    signal grp_fu_149_ce : STD_LOGIC;
    signal grp_fu_151_ce : STD_LOGIC;
    signal grp_fu_152_ce : STD_LOGIC;
    signal grp_fu_153_ce : STD_LOGIC;
    signal grp_fu_154_ce : STD_LOGIC;
    signal grp_fu_155_ce : STD_LOGIC;
    signal grp_fu_156_ce : STD_LOGIC;
    signal grp_fu_158_ce : STD_LOGIC;
    signal grp_fu_159_ce : STD_LOGIC;
    signal grp_fu_160_ce : STD_LOGIC;
    signal grp_fu_161_ce : STD_LOGIC;
    signal grp_fu_162_ce : STD_LOGIC;
    signal grp_fu_163_ce : STD_LOGIC;
    signal grp_fu_164_ce : STD_LOGIC;
    signal grp_fu_165_ce : STD_LOGIC;
    signal grp_fu_166_ce : STD_LOGIC;
    signal grp_fu_167_ce : STD_LOGIC;
    signal grp_fu_168_ce : STD_LOGIC;
    signal grp_fu_170_ce : STD_LOGIC;
    signal grp_fu_171_ce : STD_LOGIC;
    signal grp_fu_172_ce : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;
    signal kernel_data_V_5_0_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_5_2_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_5_3_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_5_4_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_5_5_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_5_6_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_5_7_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_5_8_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_5_9_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_5_10_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_5_11_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_5_12_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_5_14_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_5_15_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal kernel_data_V_5_16_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_return_0_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_return_1_int_reg : STD_LOGIC_VECTOR (15 downto 0);

    component myproject_mul_16s_8s_24_2_0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component myproject_mul_16s_9ns_25_2_0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component myproject_mul_16s_11s_26_2_0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mul_16s_9s_25_2_0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component myproject_mul_16s_10s_26_2_0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mul_16s_11ns_26_2_0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_mul_16s_8ns_24_2_0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component myproject_mul_16s_10ns_26_2_0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;



begin
    mul_16s_8s_24_2_0_U309 : component myproject_mul_16s_8s_24_2_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => kernel_data_V_5_11_int_reg,
        din1 => grp_fu_148_p1,
        ce => grp_fu_148_ce,
        dout => grp_fu_148_p2);

    mul_16s_9ns_25_2_0_U310 : component myproject_mul_16s_9ns_25_2_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 9,
        dout_WIDTH => 25)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => kernel_data_V_5_5_int_reg,
        din1 => grp_fu_149_p1,
        ce => grp_fu_149_ce,
        dout => grp_fu_149_p2);

    mul_16s_9ns_25_2_0_U311 : component myproject_mul_16s_9ns_25_2_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 9,
        dout_WIDTH => 25)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_151_p0,
        din1 => grp_fu_151_p1,
        ce => grp_fu_151_ce,
        dout => grp_fu_151_p2);

    mul_16s_11s_26_2_0_U312 : component myproject_mul_16s_11s_26_2_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_152_p0,
        din1 => grp_fu_152_p1,
        ce => grp_fu_152_ce,
        dout => grp_fu_152_p2);

    mul_16s_9s_25_2_0_U313 : component myproject_mul_16s_9s_25_2_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 9,
        dout_WIDTH => 25)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_153_p0,
        din1 => grp_fu_153_p1,
        ce => grp_fu_153_ce,
        dout => grp_fu_153_p2);

    mul_16s_9ns_25_2_0_U314 : component myproject_mul_16s_9ns_25_2_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 9,
        dout_WIDTH => 25)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_154_p0,
        din1 => grp_fu_154_p1,
        ce => grp_fu_154_ce,
        dout => grp_fu_154_p2);

    mul_16s_10s_26_2_0_U315 : component myproject_mul_16s_10s_26_2_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 10,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => kernel_data_V_5_9_int_reg,
        din1 => grp_fu_155_p1,
        ce => grp_fu_155_ce,
        dout => grp_fu_155_p2);

    mul_16s_11s_26_2_0_U316 : component myproject_mul_16s_11s_26_2_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => kernel_data_V_5_4_int_reg,
        din1 => grp_fu_156_p1,
        ce => grp_fu_156_ce,
        dout => grp_fu_156_p2);

    mul_16s_11s_26_2_0_U317 : component myproject_mul_16s_11s_26_2_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => kernel_data_V_5_10_int_reg,
        din1 => grp_fu_158_p1,
        ce => grp_fu_158_ce,
        dout => grp_fu_158_p2);

    mul_16s_9ns_25_2_0_U318 : component myproject_mul_16s_9ns_25_2_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 9,
        dout_WIDTH => 25)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => kernel_data_V_5_11_int_reg,
        din1 => grp_fu_159_p1,
        ce => grp_fu_159_ce,
        dout => grp_fu_159_p2);

    mul_16s_9ns_25_2_0_U319 : component myproject_mul_16s_9ns_25_2_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 9,
        dout_WIDTH => 25)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_160_p0,
        din1 => grp_fu_160_p1,
        ce => grp_fu_160_ce,
        dout => grp_fu_160_p2);

    mul_16s_9ns_25_2_0_U320 : component myproject_mul_16s_9ns_25_2_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 9,
        dout_WIDTH => 25)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => kernel_data_V_5_8_int_reg,
        din1 => grp_fu_161_p1,
        ce => grp_fu_161_ce,
        dout => grp_fu_161_p2);

    mul_16s_8s_24_2_0_U321 : component myproject_mul_16s_8s_24_2_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => kernel_data_V_5_10_int_reg,
        din1 => grp_fu_162_p1,
        ce => grp_fu_162_ce,
        dout => grp_fu_162_p2);

    mul_16s_11ns_26_2_0_U322 : component myproject_mul_16s_11ns_26_2_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 11,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => kernel_data_V_5_2_int_reg,
        din1 => grp_fu_163_p1,
        ce => grp_fu_163_ce,
        dout => grp_fu_163_p2);

    mul_16s_8ns_24_2_0_U323 : component myproject_mul_16s_8ns_24_2_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => kernel_data_V_5_5_int_reg,
        din1 => grp_fu_164_p1,
        ce => grp_fu_164_ce,
        dout => grp_fu_164_p2);

    mul_16s_10ns_26_2_0_U324 : component myproject_mul_16s_10ns_26_2_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 10,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => kernel_data_V_5_8_int_reg,
        din1 => grp_fu_165_p1,
        ce => grp_fu_165_ce,
        dout => grp_fu_165_p2);

    mul_16s_10ns_26_2_0_U325 : component myproject_mul_16s_10ns_26_2_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 10,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => kernel_data_V_5_7_int_reg,
        din1 => grp_fu_166_p1,
        ce => grp_fu_166_ce,
        dout => grp_fu_166_p2);

    mul_16s_10ns_26_2_0_U326 : component myproject_mul_16s_10ns_26_2_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 10,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => kernel_data_V_5_16_int_reg,
        din1 => grp_fu_167_p1,
        ce => grp_fu_167_ce,
        dout => grp_fu_167_p2);

    mul_16s_10s_26_2_0_U327 : component myproject_mul_16s_10s_26_2_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 10,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_168_p0,
        din1 => grp_fu_168_p1,
        ce => grp_fu_168_ce,
        dout => grp_fu_168_p2);

    mul_16s_9ns_25_2_0_U328 : component myproject_mul_16s_9ns_25_2_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 9,
        dout_WIDTH => 25)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => kernel_data_V_5_6_int_reg,
        din1 => grp_fu_170_p1,
        ce => grp_fu_170_ce,
        dout => grp_fu_170_p2);

    mul_16s_10ns_26_2_0_U329 : component myproject_mul_16s_10ns_26_2_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 10,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => kernel_data_V_5_3_int_reg,
        din1 => grp_fu_171_p1,
        ce => grp_fu_171_ce,
        dout => grp_fu_171_p2);

    mul_16s_9s_25_2_0_U330 : component myproject_mul_16s_9s_25_2_0
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 16,
        din1_WIDTH => 9,
        dout_WIDTH => 25)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => kernel_data_V_5_7_int_reg,
        din1 => grp_fu_172_p1,
        ce => grp_fu_172_ce,
        dout => grp_fu_172_p2);





    ap_ce_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_ce_reg <= ap_ce;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then
                add_ln703_133_reg_3204 <= add_ln703_133_fu_2832_p2;
                add_ln703_135_reg_3169 <= add_ln703_135_fu_2761_p2;
                add_ln703_136_reg_3209 <= add_ln703_136_fu_2843_p2;
                add_ln703_138_reg_3174 <= add_ln703_138_fu_2767_p2;
                add_ln703_139_reg_3179 <= add_ln703_139_fu_2773_p2;
                add_ln703_142_reg_3104 <= add_ln703_142_fu_2572_p2;
                add_ln703_143_reg_3184 <= add_ln703_143_fu_2788_p2;
                add_ln703_144_reg_3214 <= add_ln703_144_fu_2863_p2;
                add_ln703_147_reg_3219 <= add_ln703_147_fu_2873_p2;
                add_ln703_149_reg_3189 <= add_ln703_149_fu_2794_p2;
                add_ln703_150_reg_3224 <= add_ln703_150_fu_2882_p2;
                add_ln703_152_reg_3194 <= add_ln703_152_fu_2798_p2;
                add_ln703_155_reg_3109 <= add_ln703_155_fu_2578_p2;
                add_ln703_156_reg_3199 <= add_ln703_156_fu_2809_p2;
                add_ln703_157_reg_3229 <= add_ln703_157_fu_2891_p2;
                trunc_ln708_131_reg_3008 <= add_ln1118_fu_2366_p2(21 downto 10);
                trunc_ln708_132_reg_3124 <= grp_fu_171_p2(25 downto 10);
                trunc_ln708_133_reg_3018 <= sub_ln1118_13_fu_2403_p2(20 downto 10);
                trunc_ln708_134_reg_3129 <= grp_fu_156_p2(25 downto 10);
                trunc_ln708_135_reg_3023 <= grp_fu_164_p2(23 downto 10);
                trunc_ln708_136_reg_3028 <= grp_fu_149_p2(24 downto 10);
                trunc_ln708_137_reg_3134 <= grp_fu_170_p2(24 downto 10);
                trunc_ln708_138_reg_3139 <= grp_fu_172_p2(24 downto 10);
                trunc_ln708_139_reg_3144 <= grp_fu_166_p2(25 downto 10);
                trunc_ln708_140_reg_3149 <= grp_fu_161_p2(24 downto 10);
                trunc_ln708_141_reg_3154 <= grp_fu_165_p2(25 downto 10);
                trunc_ln708_142_reg_2947 <= sub_ln1118_15_fu_2201_p2(18 downto 10);
                trunc_ln708_143_reg_3058 <= grp_fu_155_p2(25 downto 10);
                trunc_ln708_144_reg_3063 <= grp_fu_162_p2(23 downto 10);
                trunc_ln708_145_reg_3068 <= grp_fu_158_p2(25 downto 10);
                trunc_ln708_146_reg_3073 <= grp_fu_148_p2(23 downto 10);
                trunc_ln708_147_reg_3078 <= grp_fu_159_p2(24 downto 10);
                trunc_ln708_148_reg_3083 <= grp_fu_154_p2(24 downto 10);
                trunc_ln708_149_reg_3088 <= grp_fu_160_p2(24 downto 10);
                trunc_ln708_150_reg_2978 <= grp_fu_151_p2(24 downto 10);
                trunc_ln708_150_reg_2978_pp0_iter2_reg <= trunc_ln708_150_reg_2978;
                trunc_ln708_151_reg_2983 <= grp_fu_153_p2(24 downto 10);
                trunc_ln708_152_reg_3159 <= grp_fu_168_p2(25 downto 10);
                trunc_ln708_153_reg_3164 <= grp_fu_152_p2(25 downto 10);
                trunc_ln708_154_reg_2993 <= sub_ln1118_16_fu_2308_p2(21 downto 10);
                trunc_ln708_154_reg_2993_pp0_iter2_reg <= trunc_ln708_154_reg_2993;
                trunc_ln708_155_reg_3099 <= grp_fu_167_p2(25 downto 10);
                trunc_ln708_s_reg_3119 <= grp_fu_163_p2(25 downto 10);
                trunc_ln_reg_3114 <= sub_ln1118_fu_2612_p2(24 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce_reg)) then
                ap_return_0_int_reg <= add_ln703_145_fu_2900_p2;
                ap_return_1_int_reg <= add_ln703_158_fu_2909_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                kernel_data_V_5_0_int_reg <= kernel_data_V_5_0;
                kernel_data_V_5_10_int_reg <= kernel_data_V_5_10;
                kernel_data_V_5_11_int_reg <= kernel_data_V_5_11;
                kernel_data_V_5_12_int_reg <= kernel_data_V_5_12;
                kernel_data_V_5_14_int_reg <= kernel_data_V_5_14;
                kernel_data_V_5_15_int_reg <= kernel_data_V_5_15;
                kernel_data_V_5_16_int_reg <= kernel_data_V_5_16;
                kernel_data_V_5_2_int_reg <= kernel_data_V_5_2;
                kernel_data_V_5_3_int_reg <= kernel_data_V_5_3;
                kernel_data_V_5_4_int_reg <= kernel_data_V_5_4;
                kernel_data_V_5_5_int_reg <= kernel_data_V_5_5;
                kernel_data_V_5_6_int_reg <= kernel_data_V_5_6;
                kernel_data_V_5_7_int_reg <= kernel_data_V_5_7;
                kernel_data_V_5_8_int_reg <= kernel_data_V_5_8;
                kernel_data_V_5_9_int_reg <= kernel_data_V_5_9;
            end if;
        end if;
    end process;
    add_ln1118_fu_2366_p2 <= std_logic_vector(signed(sext_ln1118_101_fu_2350_p1) + signed(sext_ln1118_102_fu_2362_p1));
    add_ln703_133_fu_2832_p2 <= std_logic_vector(unsigned(add_ln703_fu_2826_p2) + unsigned(trunc_ln708_152_reg_3159));
    add_ln703_134_fu_2837_p2 <= std_logic_vector(signed(sext_ln708_48_fu_2820_p1) + signed(sext_ln708_49_fu_2823_p1));
    add_ln703_135_fu_2761_p2 <= std_logic_vector(signed(sext_ln708_53_fu_2729_p1) + signed(sext_ln708_55_fu_2735_p1));
    add_ln703_136_fu_2843_p2 <= std_logic_vector(unsigned(add_ln703_135_reg_3169) + unsigned(add_ln703_134_fu_2837_p2));
    add_ln703_137_fu_2896_p2 <= std_logic_vector(unsigned(add_ln703_136_reg_3209) + unsigned(add_ln703_133_reg_3204));
    add_ln703_138_fu_2767_p2 <= std_logic_vector(signed(sext_ln1118_123_fu_2664_p1) + signed(sext_ln708_51_fu_2720_p1));
    add_ln703_139_fu_2773_p2 <= std_logic_vector(signed(sext_ln1118_125_fu_2723_p1) + signed(sext_ln1118_122_fu_2638_p1));
    add_ln703_140_fu_2854_p2 <= std_logic_vector(signed(sext_ln703_17_fu_2851_p1) + signed(sext_ln703_fu_2848_p1));
    add_ln703_141_fu_2779_p2 <= std_logic_vector(signed(sext_ln1118_126_fu_2758_p1) + signed(sext_ln708_45_fu_2651_p1));
    add_ln703_142_fu_2572_p2 <= std_logic_vector(signed(sext_ln1118_124_fu_2476_p1) + signed(ap_const_lv10_2F9));
    add_ln703_143_fu_2788_p2 <= std_logic_vector(unsigned(zext_ln703_fu_2785_p1) + unsigned(add_ln703_141_fu_2779_p2));
    add_ln703_144_fu_2863_p2 <= std_logic_vector(signed(sext_ln703_18_fu_2860_p1) + signed(add_ln703_140_fu_2854_p2));
    add_ln703_145_fu_2900_p2 <= std_logic_vector(unsigned(add_ln703_144_reg_3214) + unsigned(add_ln703_137_fu_2896_p2));
    add_ln703_146_fu_2869_p2 <= std_logic_vector(unsigned(trunc_ln708_132_reg_3124) + unsigned(trunc_ln708_134_reg_3129));
    add_ln703_147_fu_2873_p2 <= std_logic_vector(unsigned(add_ln703_146_fu_2869_p2) + unsigned(trunc_ln708_s_reg_3119));
    add_ln703_148_fu_2878_p2 <= std_logic_vector(unsigned(trunc_ln708_139_reg_3144) + unsigned(trunc_ln708_141_reg_3154));
    add_ln703_149_fu_2794_p2 <= std_logic_vector(unsigned(trunc_ln708_143_reg_3058) + unsigned(trunc_ln708_145_reg_3068));
    add_ln703_150_fu_2882_p2 <= std_logic_vector(unsigned(add_ln703_149_reg_3189) + unsigned(add_ln703_148_fu_2878_p2));
    add_ln703_151_fu_2905_p2 <= std_logic_vector(unsigned(add_ln703_150_reg_3224) + unsigned(add_ln703_147_reg_3219));
    add_ln703_152_fu_2798_p2 <= std_logic_vector(unsigned(trunc_ln708_155_reg_3099) + unsigned(sext_ln708_46_fu_2667_p1));
    add_ln703_153_fu_2887_p2 <= std_logic_vector(unsigned(add_ln703_152_reg_3194) + unsigned(trunc_ln708_153_reg_3164));
    add_ln703_154_fu_2803_p2 <= std_logic_vector(signed(sext_ln708_52_fu_2726_p1) + signed(sext_ln708_54_fu_2732_p1));
    add_ln703_155_fu_2578_p2 <= std_logic_vector(signed(sext_ln708_56_fu_2549_p1) + signed(ap_const_lv16_23));
    add_ln703_156_fu_2809_p2 <= std_logic_vector(unsigned(add_ln703_155_reg_3109) + unsigned(add_ln703_154_fu_2803_p2));
    add_ln703_157_fu_2891_p2 <= std_logic_vector(unsigned(add_ln703_156_reg_3199) + unsigned(add_ln703_153_fu_2887_p2));
    add_ln703_158_fu_2909_p2 <= std_logic_vector(unsigned(add_ln703_157_reg_3229) + unsigned(add_ln703_151_fu_2905_p2));
    add_ln703_fu_2826_p2 <= std_logic_vector(signed(sext_ln708_fu_2814_p1) + signed(sext_ln708_47_fu_2817_p1));
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_return_0_assign_proc : process(add_ln703_145_fu_2900_p2, ap_ce_reg, ap_return_0_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_0 <= ap_return_0_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_0 <= add_ln703_145_fu_2900_p2;
        end if; 
    end process;


    ap_return_1_assign_proc : process(add_ln703_158_fu_2909_p2, ap_ce_reg, ap_return_1_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_1 <= ap_return_1_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_1 <= add_ln703_158_fu_2909_p2;
        end if; 
    end process;


    grp_fu_148_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_148_ce <= ap_const_logic_1;
        else 
            grp_fu_148_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_148_p1 <= ap_const_lv24_FFFF91(8 - 1 downto 0);

    grp_fu_149_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_149_ce <= ap_const_logic_1;
        else 
            grp_fu_149_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_149_p1 <= ap_const_lv25_E4(9 - 1 downto 0);

    grp_fu_151_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_151_ce <= ap_const_logic_1;
        else 
            grp_fu_151_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_151_p0 <= sext_ln1118_118_fu_2150_p1(16 - 1 downto 0);
    grp_fu_151_p1 <= ap_const_lv25_CA(9 - 1 downto 0);

    grp_fu_152_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_152_ce <= ap_const_logic_1;
        else 
            grp_fu_152_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_152_p0 <= sext_ln708_57_fu_2556_p1(16 - 1 downto 0);
    grp_fu_152_p1 <= ap_const_lv26_3FFFD9E(11 - 1 downto 0);

    grp_fu_153_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_153_ce <= ap_const_logic_1;
        else 
            grp_fu_153_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_153_p0 <= sext_ln1118_118_fu_2150_p1(16 - 1 downto 0);
    grp_fu_153_p1 <= ap_const_lv25_1FFFF4D(9 - 1 downto 0);

    grp_fu_154_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_154_ce <= ap_const_logic_1;
        else 
            grp_fu_154_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_154_p0 <= sext_ln1118_117_fu_2249_p1(16 - 1 downto 0);
    grp_fu_154_p1 <= ap_const_lv25_92(9 - 1 downto 0);

    grp_fu_155_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_155_ce <= ap_const_logic_1;
        else 
            grp_fu_155_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_155_p1 <= ap_const_lv26_3FFFED7(10 - 1 downto 0);

    grp_fu_156_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_156_ce <= ap_const_logic_1;
        else 
            grp_fu_156_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_156_p1 <= ap_const_lv26_3FFFD90(11 - 1 downto 0);

    grp_fu_158_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_158_ce <= ap_const_logic_1;
        else 
            grp_fu_158_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_158_p1 <= ap_const_lv26_3FFFD6C(11 - 1 downto 0);

    grp_fu_159_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_159_ce <= ap_const_logic_1;
        else 
            grp_fu_159_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_159_p1 <= ap_const_lv25_CB(9 - 1 downto 0);

    grp_fu_160_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_160_ce <= ap_const_logic_1;
        else 
            grp_fu_160_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_160_p0 <= sext_ln1118_117_fu_2249_p1(16 - 1 downto 0);
    grp_fu_160_p1 <= ap_const_lv25_F5(9 - 1 downto 0);

    grp_fu_161_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_161_ce <= ap_const_logic_1;
        else 
            grp_fu_161_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_161_p1 <= ap_const_lv25_C4(9 - 1 downto 0);

    grp_fu_162_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_162_ce <= ap_const_logic_1;
        else 
            grp_fu_162_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_162_p1 <= ap_const_lv24_FFFF99(8 - 1 downto 0);

    grp_fu_163_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_163_ce <= ap_const_logic_1;
        else 
            grp_fu_163_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_163_p1 <= ap_const_lv26_207(11 - 1 downto 0);

    grp_fu_164_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_164_ce <= ap_const_logic_1;
        else 
            grp_fu_164_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_164_p1 <= ap_const_lv24_6E(8 - 1 downto 0);

    grp_fu_165_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_165_ce <= ap_const_logic_1;
        else 
            grp_fu_165_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_165_p1 <= ap_const_lv26_186(10 - 1 downto 0);

    grp_fu_166_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_166_ce <= ap_const_logic_1;
        else 
            grp_fu_166_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_166_p1 <= ap_const_lv26_196(10 - 1 downto 0);

    grp_fu_167_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_167_ce <= ap_const_logic_1;
        else 
            grp_fu_167_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_167_p1 <= ap_const_lv26_149(10 - 1 downto 0);

    grp_fu_168_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_168_ce <= ap_const_logic_1;
        else 
            grp_fu_168_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_168_p0 <= sext_ln708_57_fu_2556_p1(16 - 1 downto 0);
    grp_fu_168_p1 <= ap_const_lv26_3FFFECE(10 - 1 downto 0);

    grp_fu_170_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_170_ce <= ap_const_logic_1;
        else 
            grp_fu_170_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_170_p1 <= ap_const_lv25_DE(9 - 1 downto 0);

    grp_fu_171_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_171_ce <= ap_const_logic_1;
        else 
            grp_fu_171_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_171_p1 <= ap_const_lv26_1BE(10 - 1 downto 0);

    grp_fu_172_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_172_ce <= ap_const_logic_1;
        else 
            grp_fu_172_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_172_p1 <= ap_const_lv25_1FFFF50(9 - 1 downto 0);
        sext_ln1118_101_fu_2350_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_23_fu_2342_p3),22));

        sext_ln1118_102_fu_2362_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_24_fu_2354_p3),22));

        sext_ln1118_103_fu_2399_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_25_fu_2391_p3),21));

    sext_ln1118_112_fu_2179_p0 <= kernel_data_V_5_9_int_reg;
        sext_ln1118_112_fu_2179_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_112_fu_2179_p0),19));

        sext_ln1118_113_fu_2191_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_26_fu_2183_p3),19));

        sext_ln1118_117_fu_2249_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernel_data_V_5_12_int_reg),25));

        sext_ln1118_118_fu_2150_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernel_data_V_5_14_int_reg),25));

        sext_ln1118_120_fu_2292_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_27_fu_2284_p3),22));

        sext_ln1118_121_fu_2304_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_28_fu_2296_p3),22));

        sext_ln1118_122_fu_2638_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_131_reg_3008),15));

        sext_ln1118_123_fu_2664_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_135_reg_3023),15));

        sext_ln1118_124_fu_2476_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_142_reg_2947),10));

        sext_ln1118_125_fu_2723_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_146_reg_3073),15));

        sext_ln1118_126_fu_2758_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_154_reg_2993_pp0_iter2_reg),13));

        sext_ln1118_99_fu_2608_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_s_fu_2600_p3),25));

        sext_ln1118_fu_2596_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_2588_p3),25));

        sext_ln703_17_fu_2851_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_139_reg_3179),16));

        sext_ln703_18_fu_2860_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_143_reg_3184),16));

        sext_ln703_fu_2848_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_138_reg_3174),16));

        sext_ln708_45_fu_2651_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_133_reg_3018),13));

        sext_ln708_46_fu_2667_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_136_reg_3028),16));

        sext_ln708_47_fu_2817_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_137_reg_3134),16));

        sext_ln708_48_fu_2820_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_138_reg_3139),16));

        sext_ln708_49_fu_2823_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_140_reg_3149),16));

        sext_ln708_51_fu_2720_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_144_reg_3063),15));

        sext_ln708_52_fu_2726_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_147_reg_3078),16));

        sext_ln708_53_fu_2729_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_148_reg_3083),16));

        sext_ln708_54_fu_2732_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_149_reg_3088),16));

        sext_ln708_55_fu_2735_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_150_reg_2978_pp0_iter2_reg),16));

        sext_ln708_56_fu_2549_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_151_reg_2983),16));

        sext_ln708_57_fu_2556_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernel_data_V_5_15_int_reg),26));

        sext_ln708_fu_2814_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_reg_3114),16));

    shl_ln1118_23_fu_2342_p1 <= kernel_data_V_5_3_int_reg;
    shl_ln1118_23_fu_2342_p3 <= (shl_ln1118_23_fu_2342_p1 & ap_const_lv5_0);
    shl_ln1118_24_fu_2354_p1 <= kernel_data_V_5_3_int_reg;
    shl_ln1118_24_fu_2354_p3 <= (shl_ln1118_24_fu_2354_p1 & ap_const_lv3_0);
    shl_ln1118_25_fu_2391_p1 <= kernel_data_V_5_4_int_reg;
    shl_ln1118_25_fu_2391_p3 <= (shl_ln1118_25_fu_2391_p1 & ap_const_lv4_0);
    shl_ln1118_26_fu_2183_p1 <= kernel_data_V_5_9_int_reg;
    shl_ln1118_26_fu_2183_p3 <= (shl_ln1118_26_fu_2183_p1 & ap_const_lv2_0);
    shl_ln1118_27_fu_2284_p1 <= kernel_data_V_5_16_int_reg;
    shl_ln1118_27_fu_2284_p3 <= (shl_ln1118_27_fu_2284_p1 & ap_const_lv5_0);
    shl_ln1118_28_fu_2296_p1 <= kernel_data_V_5_16_int_reg;
    shl_ln1118_28_fu_2296_p3 <= (shl_ln1118_28_fu_2296_p1 & ap_const_lv1_0);
    shl_ln1118_s_fu_2600_p3 <= (kernel_data_V_5_0_int_reg & ap_const_lv1_0);
    shl_ln_fu_2588_p3 <= (kernel_data_V_5_0_int_reg & ap_const_lv8_0);
    sub_ln1118_13_fu_2403_p2 <= std_logic_vector(unsigned(ap_const_lv21_0) - unsigned(sext_ln1118_103_fu_2399_p1));
    sub_ln1118_14_fu_2195_p2 <= std_logic_vector(unsigned(ap_const_lv19_0) - unsigned(sext_ln1118_113_fu_2191_p1));
    sub_ln1118_15_fu_2201_p2 <= std_logic_vector(unsigned(sub_ln1118_14_fu_2195_p2) - unsigned(sext_ln1118_112_fu_2179_p1));
    sub_ln1118_16_fu_2308_p2 <= std_logic_vector(signed(sext_ln1118_120_fu_2292_p1) - signed(sext_ln1118_121_fu_2304_p1));
    sub_ln1118_fu_2612_p2 <= std_logic_vector(signed(sext_ln1118_fu_2596_p1) - signed(sext_ln1118_99_fu_2608_p1));
    zext_ln703_fu_2785_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln703_142_reg_3104),13));
end behav;
